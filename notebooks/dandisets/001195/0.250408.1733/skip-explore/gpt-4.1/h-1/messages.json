[
  {
    "role": "system",
    "content": [
      {
        "type": "text",
        "text": "The following is metadata about Dandiset 001195 version 0.250408.1733."
      },
      {
        "type": "text",
        "text": "{\n  \"id\": \"DANDI:001195/0.250408.1733\",\n  \"doi\": \"10.48324/dandi.001195/0.250408.1733\",\n  \"url\": \"https://dandiarchive.org/dandiset/001195/0.250408.1733\",\n  \"name\": \"Separable Dorsal Raphe Dopamine Projections Mediate the Facets of Loneliness-like State\",\n  \"about\": [\n    {\n      \"name\": \"dorsal raphe nucleus (DRN)\",\n      \"schemaKey\": \"Anatomy\",\n      \"identifier\": \"UBERON:0001950\"\n    },\n    {\n      \"name\": \"Central Amygdala (CeA)\",\n      \"schemaKey\": \"Anatomy\",\n      \"identifier\": \"UBERON:0001876\"\n    },\n    {\n      \"name\": \"Bed Nucleus of the Stria Terminalis (BNST)\",\n      \"schemaKey\": \"Anatomy\",\n      \"identifier\": \"UBERON:0001880\"\n    },\n    {\n      \"name\": \"Posterior Basolateral Amygdala (BLP)\",\n      \"schemaKey\": \"Anatomy\",\n      \"identifier\": \"UBERON:0006107\"\n    },\n    {\n      \"name\": \"social isolation\",\n      \"schemaKey\": \"GenericType\",\n      \"identifier\": \"http://purl.obolibrary.org/obo/GSSO_003702\"\n    }\n  ],\n  \"access\": [\n    {\n      \"status\": \"dandi:OpenAccess\",\n      \"schemaKey\": \"AccessRequirements\"\n    }\n  ],\n  \"license\": [\n    \"spdx:CC-BY-4.0\"\n  ],\n  \"version\": \"0.250408.1733\",\n  \"@context\": \"https://raw.githubusercontent.com/dandi/schema/master/releases/0.6.8/context.json\",\n  \"citation\": \"Keyes, Laurel; Lee, Christopher R.; Wichmann, Romy; Matthews, Gillian A. ; Tye, Kay M.  (2025) Separable Dorsal Raphe Dopamine Projections Mediate the Facets of Loneliness-like State (Version 0.250408.1733) [Data set]. DANDI Archive. https://doi.org/10.48324/dandi.001195/0.250408.1733\",\n  \"keywords\": [\n    \"optogenetics\",\n    \"behavior videos\",\n    \"calcium imaging\",\n    \"electrophysiology\",\n    \"Social Isolation\",\n    \"Social Motivation\",\n    \"mouse behavior\",\n    \"behavioral neuroscience\",\n    \"mouse model\",\n    \"Dorsal Raphe Nucleus (DRN)\",\n    \"Dopamine neurons\"\n  ],\n  \"protocol\": [],\n  \"schemaKey\": \"Dandiset\",\n  \"identifier\": \"DANDI:001195\",\n  \"repository\": \"https://dandiarchive.org\",\n  \"contributor\": [\n    {\n      \"name\": \"Keyes, Laurel\",\n      \"email\": \"lkeyes@salk.edu\",\n      \"roleName\": [\n        \"dcite:ContactPerson\"\n      ],\n      \"schemaKey\": \"Person\",\n      \"identifier\": \"0000-0001-5433-9948\",\n      \"affiliation\": [],\n      \"includeInCitation\": true\n    },\n    {\n      \"name\": \"Lee, Christopher R.\",\n      \"email\": \"chrlee@salk.edu\",\n      \"roleName\": [\n        \"dcite:Author\",\n        \"dcite:Conceptualization\",\n        \"dcite:DataCollector\",\n        \"dcite:FormalAnalysis\",\n        \"dcite:Researcher\",\n        \"dcite:DataCurator\"\n      ],\n      \"schemaKey\": \"Person\",\n      \"includeInCitation\": true\n    },\n    {\n      \"name\": \"Wichmann, Romy\",\n      \"roleName\": [\n        \"dcite:Researcher\",\n        \"dcite:DataCurator\"\n      ],\n      \"schemaKey\": \"Person\",\n      \"identifier\": \"0000-0002-4506-8813\",\n      \"includeInCitation\": true\n    },\n    {\n      \"name\": \"Matthews, Gillian A. \",\n      \"roleName\": [\n        \"dcite:Author\",\n        \"dcite:Conceptualization\",\n        \"dcite:DataCollector\",\n        \"dcite:DataCurator\"\n      ],\n      \"schemaKey\": \"Person\",\n      \"includeInCitation\": true\n    },\n    {\n      \"name\": \"Tye, Kay M. \",\n      \"roleName\": [\n        \"dcite:Conceptualization\",\n        \"dcite:Supervision\",\n        \"dcite:Author\"\n      ],\n      \"schemaKey\": \"Person\",\n      \"identifier\": \"0000-0002-2435-0182\",\n      \"includeInCitation\": true\n    },\n    {\n      \"name\": \"The JPB Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/05nzwyq50\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"New York Stem Cell Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/03n2a3p06\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"Klingenstein Third Generation Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/00cxc2y95\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"McKnight Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/003ghvj67\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"Clayton Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/00qw4ms08\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"Alfred P Sloan Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/052csg198\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"National Institute of Mental Health\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/05xj56w78\",\n      \"awardNumber\": \"R01-MH115920\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"National Institute of Diabetes and Digestive and Kidney Diseases: NIH Director's New Innovator Award\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/00adh9b73\",\n      \"awardNumber\": \"DP2-DK102256\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"National Center for Complementary and Integrative Health Pioneer Award (NCCIH)\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/00190t495\",\n      \"awardNumber\": \"DP1-AT009925\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"Charles A. King Trust Postdoctoral Research Fellowship Program\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"MIT Summer Research Program, supported by the Center for Brains, Minds and Machines (CBMM)\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"National Science Foundation Science and Technology Centers Award\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/021nxhr62\",\n      \"awardNumber\": \"CCF-1231216\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"Dolby Family Fund\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"includeInCitation\": false\n    }\n  ],\n  \"dateCreated\": \"2024-09-18T17:50:14.994221+00:00\",\n  \"description\": \"Supporting data for the publication \\\"Separable Dorsal Raphe Dopamine Projections Mediate the Facets of Loneliness-like State\\\" by Christopher R. Lee, Gillian A. Matthews, Mackenzie E. Lemieux, Elizabeth M. Wasserlein, Matilde Borio, Raymundo L. Miranda, Laurel R. Keyes, Gates P. Schneider, Caroline Jia, Andrea Tran, Faith Aloboudi, May G. Chan, Enzo Peroni, Grace S. Pereira, Alba L\\u00f3pez-Moraga, Anna Pall\\u00e9, Eyal Y. Kimchi, Nancy Padilla-Coreano, Romy Wichmann, Kay M. Tye.  bioRxiv 2025.02.03.636224; doi: https://doi.org/10.1101/2025.02.03.636224.  \\nThis dataset includes both in vivo calcium imaging data with supporting behavioral videos and ex vivo patch-clamp electrophysiology recordings.\\n\\nEphys Patching data also used in earlier pre-print under the title: \\\"Separable Dorsal Raphe Dopamine Projections Mediate Sociability and Valence\\\" by Gillian A. Matthews, Mackenzie E. Lemieux, Elizabeth M. Brewer, Matilde Borio, Raymundo Miranda, Laurel R. Keyes, Enzo Peroni, Grace S. Pereira, Alba Lopez-Moraga, Anna Pall\\u00e9, Christopher R. Lee, Eyal Y. Kimchi, Nancy Padilla-Coreano, Romy Wichmann, Kay M. Tye.  Research Square. 2021 Dec 3. doi: 10.21203/rs.3.rs-1025403/v1.\",\n  \"publishedBy\": {\n    \"id\": \"urn:uuid:e7b589a6-9018-44fd-8e71-5cba081330b2\",\n    \"name\": \"DANDI publish\",\n    \"endDate\": \"2025-04-08T17:33:12.753743+00:00\",\n    \"schemaKey\": \"PublishActivity\",\n    \"startDate\": \"2025-04-08T17:33:12.753743+00:00\",\n    \"wasAssociatedWith\": [\n      {\n        \"id\": \"urn:uuid:b6817d41-1f9c-4e4a-8e13-227e799e96c4\",\n        \"name\": \"DANDI API\",\n        \"version\": \"0.1.0\",\n        \"schemaKey\": \"Software\",\n        \"identifier\": \"RRID:SCR_017571\"\n      }\n    ]\n  },\n  \"studyTarget\": [\n    \"Affiliative social connections facilitate well-being and survival in numerous species. Engaging in social interactions requires positive or negative motivational drive, elicited through coordinated activity across neural circuits. However, the identity, interconnectivity, and functional encoding of social information within these circuits remains poorly understood. Here, we focus on downstream projections of dorsal raphe nucleus (DRN) dopamine neurons (DRNDAT), which we previously implicated in social motivation alongside an aversive affective state. We show that three prominent DRNDAT projections \\u2013 to the bed nucleus of the stria terminalis (BNST), central amygdala (CeA), and posterior basolateral amygdala (BLP) \\u2013 play separable roles in behavior, despite substantial collateralization. Photoactivation of the DRNDAT-CeA projection promoted social behavior and photostimulation of the DRNDAT-BNST projection promoted exploratory behavior, while the DRNDAT-BLP projection supported place avoidance, suggesting a negative affective state. Downstream regions showed diverse receptor expression, poising DRNDAT neurons to act through dopamine, neuropeptide, and glutamate transmission. Furthermore, we show ex vivo that the effect of DRNDAT photostimulation on downstream neuron excitability depended on region and baseline cell properties, resulting in excitatory responses in BNST cells and diverse responses in CeA and BLP. Finally, in vivo microendoscopic cellular-resolution recordings in the CeA with DRNDAT photostimulation revealed a correlation between social behavior and neurons excited by social stimuli\\u2013 suggesting that increased dopamine tone may recruit different CeA neurons to social ensembles. Collectively, these circuit features may facilitate a coordinated, but flexible, response in the presence of social stimuli that can be flexibly guided based on the internal social homeostatic need state of the individual.\"\n  ],\n  \"assetsSummary\": {\n    \"species\": [\n      {\n        \"name\": \"Mus musculus - House mouse\",\n        \"schemaKey\": \"SpeciesType\",\n        \"identifier\": \"http://purl.obolibrary.org/obo/NCBITaxon_10090\"\n      }\n    ],\n    \"approach\": [\n      {\n        \"name\": \"electrophysiological approach\",\n        \"schemaKey\": \"ApproachType\"\n      },\n      {\n        \"name\": \"microscopy approach; cell population imaging\",\n        \"schemaKey\": \"ApproachType\"\n      }\n    ],\n    \"schemaKey\": \"AssetsSummary\",\n    \"dataStandard\": [\n      {\n        \"name\": \"Neurodata Without Borders (NWB)\",\n        \"schemaKey\": \"StandardsType\",\n        \"identifier\": \"RRID:SCR_015242\"\n      }\n    ],\n    \"numberOfBytes\": 69986574127,\n    \"numberOfCells\": 131,\n    \"numberOfFiles\": 230,\n    \"numberOfSamples\": 8,\n    \"numberOfSubjects\": 34,\n    \"variableMeasured\": [\n      \"CurrentClampStimulusSeries\",\n      \"VoltageClampSeries\",\n      \"VoltageClampStimulusSeries\",\n      \"CurrentClampSeries\",\n      \"OpticalChannel\",\n      \"ImagingPlane\",\n      \"PlaneSegmentation\",\n      \"ProcessingModule\",\n      \"OnePhotonSeries\"\n    ],\n    \"measurementTechnique\": [\n      {\n        \"name\": \"voltage clamp technique\",\n        \"schemaKey\": \"MeasurementTechniqueType\"\n      },\n      {\n        \"name\": \"current clamp technique\",\n        \"schemaKey\": \"MeasurementTechniqueType\"\n      },\n      {\n        \"name\": \"one-photon microscopy technique\",\n        \"schemaKey\": \"MeasurementTechniqueType\"\n      },\n      {\n        \"name\": \"analytical technique\",\n        \"schemaKey\": \"MeasurementTechniqueType\"\n      },\n      {\n        \"name\": \"surgical technique\",\n        \"schemaKey\": \"MeasurementTechniqueType\"\n      }\n    ]\n  },\n  \"datePublished\": \"2025-04-08T17:33:12.753743+00:00\",\n  \"schemaVersion\": \"0.6.8\",\n  \"ethicsApproval\": [\n    {\n      \"schemaKey\": \"EthicsApproval\",\n      \"identifier\": \"All procedures involving animals were conducted in accordance with NIH guidelines and approved by the MIT Committee on Animal Care or the Salk Institute Institutional Animal Care and Use Committee\",\n      \"contactPoint\": {\n        \"email\": \"rwichmann@salk.edu\",\n        \"schemaKey\": \"ContactPoint\"\n      }\n    }\n  ],\n  \"wasGeneratedBy\": [\n    {\n      \"name\": \"Separable Dorsal Raphe Dopamine Projections Mediate Sociability and Valence\",\n      \"schemaKey\": \"Project\",\n      \"identifier\": \"https://www.researchsquare.com/article/rs-1025403/v1\",\n      \"description\": \"Affiliative social connections facilitate well-being and survival in numerous species. Engaging in social interactions requires positive and negative motivational drive, elicited through coordinated activity across neural circuits. However, the identity, interconnectivity, and functional encoding of social information within these circuits remains poorly understood. Here, we focused on downstream projections of dorsal raphe nucleus (DRN) dopamine neurons (DRNDAT), which we previously implicated in \\u2018negative drive\\u2019-induced social motivation. We show that three prominent DRNDAT projections \\u2013 to the bed nucleus of the stria terminalis (BNST), central amygdala (CeA), and posterior basolateral amygdala (BLP) \\u2013 play separable roles in behavior, despite substantial collateralization. Photoactivation of the DRNDAT-CeA projection promoted social behavior and photoactivation of the DRNDAT-BNST projection promoted exploratory behavior, while the DRNDAT-BLP projection supported place avoidance, suggesting a negative affective state. Downstream regions showed diverse, region-specific, receptor expression, poising DRNDAT neurons to act through dopamine, neuropeptide, and glutamate transmission. Furthermore, we show ex vivo that the effect of DRNDAT photostimulation on downstream neuron excitability was predicted by baseline cell properties, suggesting cell-type-specific modulation. Collectively, these data indicate that DRNDAT neurons may bias behavior via precise modulation of cellular activity in broadly-distributed target structures.\"\n    }\n  ],\n  \"acknowledgement\": \"K.M.T. is the Wylie Vale Chair at the Salk Institute for Biological Studies, a New York Stem Cell Foundation - Robertson Investigator, and a McKnight Scholar. This work was supported by funding from the JPB Foundation, Alfred P Sloan Foundation, New York Stem Cell Foundation, Klingenstein Foundation, McKnight Foundation, Clayton Foundation, Dolby Family Fund, R01-MH115920 (NIMH), the NIH Director\\u2019s New Innovator Award DP2-DK102256 (NIDDK), and Pioneer Award DP1-AT009925 (NCCIH). G.A.M was supported by a Postdoctoral Research Fellowship from the Charles A. King Trust.  R.L.M. was funded through the MSRP program in the Brains & Cognitive Sciences Department at MIT, supported by the Center for Brains, Minds and Machines (CBMM), and funded by NSF STC award CCF\\u0002 1231216. E.M.W was supported by a summer scholarship from Johnson & Johnson. We thank C. Leppla, J. Olsen, P. Namburi, V. Barth, J. Wang, K. Batra, A. Brown, and A. Libster for technical advice, all members of the Tye Lab for helpful discussion, and advice from the CellProfiler team at the Broad Institute. We also thank Rachel Neve for the HSV construct, and Charu Ramakrishnan & Karl Deisseroth for AAV5-fDIO-eYFP. \",\n  \"relatedResource\": [\n    {\n      \"url\": \"https://doi.org/10.7554/eLife.105955.1\",\n      \"name\": \"Separable Dorsal Raphe Dopamine Projections mediate the Facets of Loneliness-like state\",\n      \"relation\": \"dcite:Describes\",\n      \"schemaKey\": \"Resource\",\n      \"identifier\": \"https://doi.org/10.7554/eLife.105955.1\",\n      \"repository\": \"eLife\",\n      \"resourceType\": \"dcite:JournalArticle\"\n    },\n    {\n      \"url\": \"https://doi.org/10.21203/rs.3.rs-1025403/v1\",\n      \"name\": \"Separable Dorsal Raphe Dopamine Projections Mediate Sociability and Valence\",\n      \"relation\": \"dcite:Describes\",\n      \"schemaKey\": \"Resource\",\n      \"identifier\": \"https://doi.org/10.21203/rs.3.rs-1025403/v1\",\n      \"repository\": \"Research Square\",\n      \"resourceType\": \"dcite:Preprint\"\n    }\n  ],\n  \"manifestLocation\": [\n    \"https://dandiarchive.s3.amazonaws.com/dandisets/001195/0.250408.1733/assets.yaml\"\n  ]\n}"
      }
    ]
  },
  {
    "role": "system",
    "content": [
      {
        "type": "text",
        "text": "The following is a listing of some of the files in the Dandiset."
      },
      {
        "type": "text",
        "text": "sub-23/sub-23_ses-20150324T134114_slice-slice-1_cell-C1_icephys.nwb\nsub-23/sub-23_ses-20150324T161217_slice-slice-2_cell-B3_icephys.nwb\nsub-235/sub-235_ses-20200921T142415_slice-slice-1_cell-C3_icephys.nwb\nsub-23/sub-23_ses-20150324T154615_slice-slice-2_cell-B2_icephys.nwb\nsub-23/sub-23_ses-20150324T152016_slice-slice-2_cell-B1_icephys.nwb\nsub-235/sub-235_ses-20200921T150553_slice-slice-1_cell-C5_icephys.nwb\nsub-235/sub-235_ses-20200921T131057_slice-slice-1_cell-C1_icephys.nwb\nsub-235/sub-235_ses-20200921T164032_slice-slice-2_cell-C8_icephys.nwb\nsub-235/sub-235_ses-20200921T134852_slice-slice-1_cell-C2_icephys.nwb\nsub-235/sub-235_ses-20200921T172736_slice-slice-2_cell-C10_icephys.nwb"
      }
    ]
  },
  {
    "role": "system",
    "content": [
      {
        "type": "text",
        "text": "The following is metadata and usage information about the file sub-23/sub-23_ses-20150324T134114_slice-slice-1_cell-C1_icephys.nwb."
      },
      {
        "type": "text",
        "text": "\nimport pynwb\nimport h5py\nimport remfile\n\n# Load\nfrom dandi.dandiapi import DandiAPIClient\n\nclient = DandiAPIClient()\ndandiset = client.get_dandiset(\"001195\", \"0.250408.1733\")\nurl = next(dandiset.get_assets_by_glob(\"sub-23/sub-23_ses-20150324T134114_slice-slice-1_cell-C1_icephys.nwb\")).download_url\n\nremote_file = remfile.File(url)\nh5_file = h5py.File(remote_file)\nio = pynwb.NWBHDF5IO(file=h5_file)\nnwb = io.read()\n\nnwb # (NWBFile)\nnwb.session_description # (str) episodic stimulation\nnwb.identifier # (str) a18b081c-3b63-45df-b702-fc3640aef3de\nnwb.session_start_time # (datetime) 2015-03-24T13:41:14-07:00\nnwb.timestamps_reference_time # (datetime) 2015-03-24T13:41:14-07:00\nnwb.file_create_date # (list) [datetime.datetime(2025, 4, 3, 16, 56, 47, 408514, tzinfo=tzoffset(None, -25200))]\nnwb.experimenter # (tuple) ['Matthews, Gillian']\nnwb.icephys_electrodes # (LabelledDict)\nicephys_electrodes = nwb.icephys_electrodes\nelectrode_0 = icephys_electrodes[\"electrode-0\"]\nelectrode_0 # (IntracellularElectrode)\nelectrode_0.description # (str) no description\nelectrode_0.device # (Device)\nelectrode_0.device.description # (str) no description\nelectrode_1 = icephys_electrodes[\"electrode-1\"]\nelectrode_1 # (IntracellularElectrode)\nelectrode_1.description # (str) no description\nelectrode_1.device # (Device)\nelectrode_1.device.description # (str) no description\nnwb.acquisition # (LabelledDict)\nacquisition = nwb.acquisition\ncurrent_clamp_response_01_ch_0 = acquisition[\"current_clamp-response-01-ch-0\"]\ncurrent_clamp_response_01_ch_0 # (CurrentClampSeries)\ncurrent_clamp_response_01_ch_0.starting_time # (float64) 0.0\ncurrent_clamp_response_01_ch_0.rate # (float64) 10000.0\ncurrent_clamp_response_01_ch_0.resolution # (float64) -1.0\ncurrent_clamp_response_01_ch_0.comments # (str) no comments\ncurrent_clamp_response_01_ch_0.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_01_ch_0.conversion # (float64) 3.051757880712104e-05\ncurrent_clamp_response_01_ch_0.offset # (float64) 0.0\ncurrent_clamp_response_01_ch_0.unit # (str) volts\ncurrent_clamp_response_01_ch_0.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_01_ch_0.data[:] # Access all data\n# current_clamp_response_01_ch_0.data[0:n] # Access first n elements\ncurrent_clamp_response_01_ch_0.starting_time_unit # (str) seconds\ncurrent_clamp_response_01_ch_0.gain # (float64) nan\ncurrent_clamp_response_01_ch_0.stimulus_description # (str) N/A\ncurrent_clamp_response_01_ch_0.electrode # (IntracellularElectrode)\ncurrent_clamp_response_01_ch_0.electrode.description # (str) no description\ncurrent_clamp_response_01_ch_0.electrode.device # (Device)\ncurrent_clamp_response_01_ch_0.electrode.device.description # (str) no description\ncurrent_clamp_response_01_ch_1 = acquisition[\"current_clamp-response-01-ch-1\"]\ncurrent_clamp_response_01_ch_1 # (CurrentClampSeries)\ncurrent_clamp_response_01_ch_1.starting_time # (float64) 0.0\ncurrent_clamp_response_01_ch_1.rate # (float64) 10000.0\ncurrent_clamp_response_01_ch_1.resolution # (float64) -1.0\ncurrent_clamp_response_01_ch_1.comments # (str) no comments\ncurrent_clamp_response_01_ch_1.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_01_ch_1.conversion # (float64) 6.103515335098577e-13\ncurrent_clamp_response_01_ch_1.offset # (float64) 0.0\ncurrent_clamp_response_01_ch_1.unit # (str) volts\ncurrent_clamp_response_01_ch_1.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_01_ch_1.data[:] # Access all data\n# current_clamp_response_01_ch_1.data[0:n] # Access first n elements\ncurrent_clamp_response_01_ch_1.starting_time_unit # (str) seconds\ncurrent_clamp_response_01_ch_1.gain # (float64) nan\ncurrent_clamp_response_01_ch_1.stimulus_description # (str) N/A\ncurrent_clamp_response_01_ch_1.electrode # (IntracellularElectrode)\ncurrent_clamp_response_01_ch_1.electrode.description # (str) no description\ncurrent_clamp_response_01_ch_1.electrode.device # (Device)\ncurrent_clamp_response_01_ch_1.electrode.device.description # (str) no description\ncurrent_clamp_response_02_ch_0 = acquisition[\"current_clamp-response-02-ch-0\"]\ncurrent_clamp_response_02_ch_0 # (CurrentClampSeries)\ncurrent_clamp_response_02_ch_0.starting_time # (float64) 1.0\ncurrent_clamp_response_02_ch_0.rate # (float64) 10000.0\ncurrent_clamp_response_02_ch_0.resolution # (float64) -1.0\ncurrent_clamp_response_02_ch_0.comments # (str) no comments\ncurrent_clamp_response_02_ch_0.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_02_ch_0.conversion # (float64) 3.051757880712104e-05\ncurrent_clamp_response_02_ch_0.offset # (float64) 0.0\ncurrent_clamp_response_02_ch_0.unit # (str) volts\ncurrent_clamp_response_02_ch_0.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_02_ch_0.data[:] # Access all data\n# current_clamp_response_02_ch_0.data[0:n] # Access first n elements\ncurrent_clamp_response_02_ch_0.starting_time_unit # (str) seconds\ncurrent_clamp_response_02_ch_0.gain # (float64) nan\ncurrent_clamp_response_02_ch_0.stimulus_description # (str) N/A\ncurrent_clamp_response_02_ch_0.electrode # (IntracellularElectrode)\ncurrent_clamp_response_02_ch_0.electrode.description # (str) no description\ncurrent_clamp_response_02_ch_0.electrode.device # (Device)\ncurrent_clamp_response_02_ch_0.electrode.device.description # (str) no description\ncurrent_clamp_response_02_ch_1 = acquisition[\"current_clamp-response-02-ch-1\"]\ncurrent_clamp_response_02_ch_1 # (CurrentClampSeries)\ncurrent_clamp_response_02_ch_1.starting_time # (float64) 1.0\ncurrent_clamp_response_02_ch_1.rate # (float64) 10000.0\ncurrent_clamp_response_02_ch_1.resolution # (float64) -1.0\ncurrent_clamp_response_02_ch_1.comments # (str) no comments\ncurrent_clamp_response_02_ch_1.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_02_ch_1.conversion # (float64) 6.103515335098577e-13\ncurrent_clamp_response_02_ch_1.offset # (float64) 0.0\ncurrent_clamp_response_02_ch_1.unit # (str) volts\ncurrent_clamp_response_02_ch_1.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_02_ch_1.data[:] # Access all data\n# current_clamp_response_02_ch_1.data[0:n] # Access first n elements\ncurrent_clamp_response_02_ch_1.starting_time_unit # (str) seconds\ncurrent_clamp_response_02_ch_1.gain # (float64) nan\ncurrent_clamp_response_02_ch_1.stimulus_description # (str) N/A\ncurrent_clamp_response_02_ch_1.electrode # (IntracellularElectrode)\ncurrent_clamp_response_02_ch_1.electrode.description # (str) no description\ncurrent_clamp_response_02_ch_1.electrode.device # (Device)\ncurrent_clamp_response_02_ch_1.electrode.device.description # (str) no description\ncurrent_clamp_response_03_ch_0 = acquisition[\"current_clamp-response-03-ch-0\"]\ncurrent_clamp_response_03_ch_0 # (CurrentClampSeries)\ncurrent_clamp_response_03_ch_0.starting_time # (float64) 2.0\ncurrent_clamp_response_03_ch_0.rate # (float64) 10000.0\ncurrent_clamp_response_03_ch_0.resolution # (float64) -1.0\ncurrent_clamp_response_03_ch_0.comments # (str) no comments\ncurrent_clamp_response_03_ch_0.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_03_ch_0.conversion # (float64) 3.051757880712104e-05\ncurrent_clamp_response_03_ch_0.offset # (float64) 0.0\ncurrent_clamp_response_03_ch_0.unit # (str) volts\ncurrent_clamp_response_03_ch_0.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_03_ch_0.data[:] # Access all data\n# current_clamp_response_03_ch_0.data[0:n] # Access first n elements\ncurrent_clamp_response_03_ch_0.starting_time_unit # (str) seconds\ncurrent_clamp_response_03_ch_0.gain # (float64) nan\ncurrent_clamp_response_03_ch_0.stimulus_description # (str) N/A\ncurrent_clamp_response_03_ch_0.electrode # (IntracellularElectrode)\ncurrent_clamp_response_03_ch_0.electrode.description # (str) no description\ncurrent_clamp_response_03_ch_0.electrode.device # (Device)\ncurrent_clamp_response_03_ch_0.electrode.device.description # (str) no description\ncurrent_clamp_response_03_ch_1 = acquisition[\"current_clamp-response-03-ch-1\"]\ncurrent_clamp_response_03_ch_1 # (CurrentClampSeries)\ncurrent_clamp_response_03_ch_1.starting_time # (float64) 2.0\ncurrent_clamp_response_03_ch_1.rate # (float64) 10000.0\ncurrent_clamp_response_03_ch_1.resolution # (float64) -1.0\ncurrent_clamp_response_03_ch_1.comments # (str) no comments\ncurrent_clamp_response_03_ch_1.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_03_ch_1.conversion # (float64) 6.103515335098577e-13\ncurrent_clamp_response_03_ch_1.offset # (float64) 0.0\ncurrent_clamp_response_03_ch_1.unit # (str) volts\ncurrent_clamp_response_03_ch_1.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_03_ch_1.data[:] # Access all data\n# current_clamp_response_03_ch_1.data[0:n] # Access first n elements\ncurrent_clamp_response_03_ch_1.starting_time_unit # (str) seconds\ncurrent_clamp_response_03_ch_1.gain # (float64) nan\ncurrent_clamp_response_03_ch_1.stimulus_description # (str) N/A\ncurrent_clamp_response_03_ch_1.electrode # (IntracellularElectrode)\ncurrent_clamp_response_03_ch_1.electrode.description # (str) no description\ncurrent_clamp_response_03_ch_1.electrode.device # (Device)\ncurrent_clamp_response_03_ch_1.electrode.device.description # (str) no description\ncurrent_clamp_response_04_ch_0 = acquisition[\"current_clamp-response-04-ch-0\"]\ncurrent_clamp_response_04_ch_0 # (CurrentClampSeries)\ncurrent_clamp_response_04_ch_0.starting_time # (float64) 3.0\ncurrent_clamp_response_04_ch_0.rate # (float64) 10000.0\ncurrent_clamp_response_04_ch_0.resolution # (float64) -1.0\ncurrent_clamp_response_04_ch_0.comments # (str) no comments\ncurrent_clamp_response_04_ch_0.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_04_ch_0.conversion # (float64) 3.051757880712104e-05\ncurrent_clamp_response_04_ch_0.offset # (float64) 0.0\ncurrent_clamp_response_04_ch_0.unit # (str) volts\ncurrent_clamp_response_04_ch_0.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_04_ch_0.data[:] # Access all data\n# current_clamp_response_04_ch_0.data[0:n] # Access first n elements\ncurrent_clamp_response_04_ch_0.starting_time_unit # (str) seconds\ncurrent_clamp_response_04_ch_0.gain # (float64) nan\ncurrent_clamp_response_04_ch_0.stimulus_description # (str) N/A\ncurrent_clamp_response_04_ch_0.electrode # (IntracellularElectrode)\ncurrent_clamp_response_04_ch_0.electrode.description # (str) no description\ncurrent_clamp_response_04_ch_0.electrode.device # (Device)\ncurrent_clamp_response_04_ch_0.electrode.device.description # (str) no description\ncurrent_clamp_response_04_ch_1 = acquisition[\"current_clamp-response-04-ch-1\"]\ncurrent_clamp_response_04_ch_1 # (CurrentClampSeries)\ncurrent_clamp_response_04_ch_1.starting_time # (float64) 3.0\ncurrent_clamp_response_04_ch_1.rate # (float64) 10000.0\ncurrent_clamp_response_04_ch_1.resolution # (float64) -1.0\ncurrent_clamp_response_04_ch_1.comments # (str) no comments\ncurrent_clamp_response_04_ch_1.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_04_ch_1.conversion # (float64) 6.103515335098577e-13\ncurrent_clamp_response_04_ch_1.offset # (float64) 0.0\ncurrent_clamp_response_04_ch_1.unit # (str) volts\ncurrent_clamp_response_04_ch_1.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_04_ch_1.data[:] # Access all data\n# current_clamp_response_04_ch_1.data[0:n] # Access first n elements\ncurrent_clamp_response_04_ch_1.starting_time_unit # (str) seconds\ncurrent_clamp_response_04_ch_1.gain # (float64) nan\ncurrent_clamp_response_04_ch_1.stimulus_description # (str) N/A\ncurrent_clamp_response_04_ch_1.electrode # (IntracellularElectrode)\ncurrent_clamp_response_04_ch_1.electrode.description # (str) no description\ncurrent_clamp_response_04_ch_1.electrode.device # (Device)\ncurrent_clamp_response_04_ch_1.electrode.device.description # (str) no description\n# ...\n# Other fields: current_clamp-response-05-ch-0, current_clamp-response-05-ch-1, current_clamp-response-06-ch-0, current_clamp-response-06-ch-1, current_clamp-response-07-ch-0, current_clamp-response-07-ch-1, current_clamp-response-08-ch-0, current_clamp-response-08-ch-1, current_clamp-response-09-ch-0, current_clamp-response-09-ch-1, current_clamp-response-10-ch-0, current_clamp-response-10-ch-1, current_clamp-response-11-ch-0, current_clamp-response-11-ch-1, current_clamp-response-12-ch-0\n# ... and 64 more fields\nnwb.stimulus # (LabelledDict)\nstimulus = nwb.stimulus\nstimulus_01_ch_0 = stimulus[\"stimulus-01-ch-0\"]\nstimulus_01_ch_0 # (CurrentClampStimulusSeries)\nstimulus_01_ch_0.starting_time # (float64) 0.0\nstimulus_01_ch_0.rate # (float64) 10000.0\nstimulus_01_ch_0.resolution # (float64) -1.0\nstimulus_01_ch_0.comments # (str) no comments\nstimulus_01_ch_0.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_01_ch_0.conversion # (float64) 1e-12\nstimulus_01_ch_0.offset # (float64) 0.0\nstimulus_01_ch_0.unit # (str) amperes\nstimulus_01_ch_0.data # (Dataset) shape (3000,); dtype float64\n# stimulus_01_ch_0.data[:] # Access all data\n# stimulus_01_ch_0.data[0:n] # Access first n elements\nstimulus_01_ch_0.starting_time_unit # (str) seconds\nstimulus_01_ch_0.gain # (float64) nan\nstimulus_01_ch_0.stimulus_description # (str) N/A\nstimulus_01_ch_0.electrode # (IntracellularElectrode)\nstimulus_01_ch_0.electrode.description # (str) no description\nstimulus_01_ch_0.electrode.device # (Device)\nstimulus_01_ch_0.electrode.device.description # (str) no description\nstimulus_01_ch_1 = stimulus[\"stimulus-01-ch-1\"]\nstimulus_01_ch_1 # (CurrentClampStimulusSeries)\nstimulus_01_ch_1.starting_time # (float64) 0.0\nstimulus_01_ch_1.rate # (float64) 10000.0\nstimulus_01_ch_1.resolution # (float64) -1.0\nstimulus_01_ch_1.comments # (str) no comments\nstimulus_01_ch_1.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_01_ch_1.conversion # (float64) 0.001\nstimulus_01_ch_1.offset # (float64) 0.0\nstimulus_01_ch_1.unit # (str) amperes\nstimulus_01_ch_1.data # (Dataset) shape (3000,); dtype float64\n# stimulus_01_ch_1.data[:] # Access all data\n# stimulus_01_ch_1.data[0:n] # Access first n elements\nstimulus_01_ch_1.starting_time_unit # (str) seconds\nstimulus_01_ch_1.gain # (float64) nan\nstimulus_01_ch_1.stimulus_description # (str) N/A\nstimulus_01_ch_1.electrode # (IntracellularElectrode)\nstimulus_01_ch_1.electrode.description # (str) no description\nstimulus_01_ch_1.electrode.device # (Device)\nstimulus_01_ch_1.electrode.device.description # (str) no description\nstimulus_02_ch_0 = stimulus[\"stimulus-02-ch-0\"]\nstimulus_02_ch_0 # (CurrentClampStimulusSeries)\nstimulus_02_ch_0.starting_time # (float64) 1.0\nstimulus_02_ch_0.rate # (float64) 10000.0\nstimulus_02_ch_0.resolution # (float64) -1.0\nstimulus_02_ch_0.comments # (str) no comments\nstimulus_02_ch_0.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_02_ch_0.conversion # (float64) 1e-12\nstimulus_02_ch_0.offset # (float64) 0.0\nstimulus_02_ch_0.unit # (str) amperes\nstimulus_02_ch_0.data # (Dataset) shape (3000,); dtype float64\n# stimulus_02_ch_0.data[:] # Access all data\n# stimulus_02_ch_0.data[0:n] # Access first n elements\nstimulus_02_ch_0.starting_time_unit # (str) seconds\nstimulus_02_ch_0.gain # (float64) nan\nstimulus_02_ch_0.stimulus_description # (str) N/A\nstimulus_02_ch_0.electrode # (IntracellularElectrode)\nstimulus_02_ch_0.electrode.description # (str) no description\nstimulus_02_ch_0.electrode.device # (Device)\nstimulus_02_ch_0.electrode.device.description # (str) no description\nstimulus_02_ch_1 = stimulus[\"stimulus-02-ch-1\"]\nstimulus_02_ch_1 # (CurrentClampStimulusSeries)\nstimulus_02_ch_1.starting_time # (float64) 1.0\nstimulus_02_ch_1.rate # (float64) 10000.0\nstimulus_02_ch_1.resolution # (float64) -1.0\nstimulus_02_ch_1.comments # (str) no comments\nstimulus_02_ch_1.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_02_ch_1.conversion # (float64) 0.001\nstimulus_02_ch_1.offset # (float64) 0.0\nstimulus_02_ch_1.unit # (str) amperes\nstimulus_02_ch_1.data # (Dataset) shape (3000,); dtype float64\n# stimulus_02_ch_1.data[:] # Access all data\n# stimulus_02_ch_1.data[0:n] # Access first n elements\nstimulus_02_ch_1.starting_time_unit # (str) seconds\nstimulus_02_ch_1.gain # (float64) nan\nstimulus_02_ch_1.stimulus_description # (str) N/A\nstimulus_02_ch_1.electrode # (IntracellularElectrode)\nstimulus_02_ch_1.electrode.description # (str) no description\nstimulus_02_ch_1.electrode.device # (Device)\nstimulus_02_ch_1.electrode.device.description # (str) no description\nstimulus_03_ch_0 = stimulus[\"stimulus-03-ch-0\"]\nstimulus_03_ch_0 # (CurrentClampStimulusSeries)\nstimulus_03_ch_0.starting_time # (float64) 2.0\nstimulus_03_ch_0.rate # (float64) 10000.0\nstimulus_03_ch_0.resolution # (float64) -1.0\nstimulus_03_ch_0.comments # (str) no comments\nstimulus_03_ch_0.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_03_ch_0.conversion # (float64) 1e-12\nstimulus_03_ch_0.offset # (float64) 0.0\nstimulus_03_ch_0.unit # (str) amperes\nstimulus_03_ch_0.data # (Dataset) shape (3000,); dtype float64\n# stimulus_03_ch_0.data[:] # Access all data\n# stimulus_03_ch_0.data[0:n] # Access first n elements\nstimulus_03_ch_0.starting_time_unit # (str) seconds\nstimulus_03_ch_0.gain # (float64) nan\nstimulus_03_ch_0.stimulus_description # (str) N/A\nstimulus_03_ch_0.electrode # (IntracellularElectrode)\nstimulus_03_ch_0.electrode.description # (str) no description\nstimulus_03_ch_0.electrode.device # (Device)\nstimulus_03_ch_0.electrode.device.description # (str) no description\nstimulus_03_ch_1 = stimulus[\"stimulus-03-ch-1\"]\nstimulus_03_ch_1 # (CurrentClampStimulusSeries)\nstimulus_03_ch_1.starting_time # (float64) 2.0\nstimulus_03_ch_1.rate # (float64) 10000.0\nstimulus_03_ch_1.resolution # (float64) -1.0\nstimulus_03_ch_1.comments # (str) no comments\nstimulus_03_ch_1.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_03_ch_1.conversion # (float64) 0.001\nstimulus_03_ch_1.offset # (float64) 0.0\nstimulus_03_ch_1.unit # (str) amperes\nstimulus_03_ch_1.data # (Dataset) shape (3000,); dtype float64\n# stimulus_03_ch_1.data[:] # Access all data\n# stimulus_03_ch_1.data[0:n] # Access first n elements\nstimulus_03_ch_1.starting_time_unit # (str) seconds\nstimulus_03_ch_1.gain # (float64) nan\nstimulus_03_ch_1.stimulus_description # (str) N/A\nstimulus_03_ch_1.electrode # (IntracellularElectrode)\nstimulus_03_ch_1.electrode.description # (str) no description\nstimulus_03_ch_1.electrode.device # (Device)\nstimulus_03_ch_1.electrode.device.description # (str) no description\nstimulus_04_ch_0 = stimulus[\"stimulus-04-ch-0\"]\nstimulus_04_ch_0 # (CurrentClampStimulusSeries)\nstimulus_04_ch_0.starting_time # (float64) 3.0\nstimulus_04_ch_0.rate # (float64) 10000.0\nstimulus_04_ch_0.resolution # (float64) -1.0\nstimulus_04_ch_0.comments # (str) no comments\nstimulus_04_ch_0.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_04_ch_0.conversion # (float64) 1e-12\nstimulus_04_ch_0.offset # (float64) 0.0\nstimulus_04_ch_0.unit # (str) amperes\nstimulus_04_ch_0.data # (Dataset) shape (3000,); dtype float64\n# stimulus_04_ch_0.data[:] # Access all data\n# stimulus_04_ch_0.data[0:n] # Access first n elements\nstimulus_04_ch_0.starting_time_unit # (str) seconds\nstimulus_04_ch_0.gain # (float64) nan\nstimulus_04_ch_0.stimulus_description # (str) N/A\nstimulus_04_ch_0.electrode # (IntracellularElectrode)\nstimulus_04_ch_0.electrode.description # (str) no description\nstimulus_04_ch_0.electrode.device # (Device)\nstimulus_04_ch_0.electrode.device.description # (str) no description\nstimulus_04_ch_1 = stimulus[\"stimulus-04-ch-1\"]\nstimulus_04_ch_1 # (CurrentClampStimulusSeries)\nstimulus_04_ch_1.starting_time # (float64) 3.0\nstimulus_04_ch_1.rate # (float64) 10000.0\nstimulus_04_ch_1.resolution # (float64) -1.0\nstimulus_04_ch_1.comments # (str) no comments\nstimulus_04_ch_1.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_04_ch_1.conversion # (float64) 0.001\nstimulus_04_ch_1.offset # (float64) 0.0\nstimulus_04_ch_1.unit # (str) amperes\nstimulus_04_ch_1.data # (Dataset) shape (3000,); dtype float64\n# stimulus_04_ch_1.data[:] # Access all data\n# stimulus_04_ch_1.data[0:n] # Access first n elements\nstimulus_04_ch_1.starting_time_unit # (str) seconds\nstimulus_04_ch_1.gain # (float64) nan\nstimulus_04_ch_1.stimulus_description # (str) N/A\nstimulus_04_ch_1.electrode # (IntracellularElectrode)\nstimulus_04_ch_1.electrode.description # (str) no description\nstimulus_04_ch_1.electrode.device # (Device)\nstimulus_04_ch_1.electrode.device.description # (str) no description\n# ...\n# Other fields: stimulus-05-ch-0, stimulus-05-ch-1, stimulus-06-ch-0, stimulus-06-ch-1, stimulus-07-ch-0, stimulus-07-ch-1, stimulus-08-ch-0, stimulus-08-ch-1, stimulus-09-ch-0, stimulus-09-ch-1, stimulus-10-ch-0, stimulus-10-ch-1, stimulus-11-ch-0, stimulus-11-ch-1, stimulus-12-ch-0\n# ... and 63 more fields\nnwb.devices # (LabelledDict)\ndevices = nwb.devices\nDeviceIcephys = devices[\"DeviceIcephys\"]\nDeviceIcephys # (Device)\nDeviceIcephys.description # (str) no description\nnwb.lab_meta_data # (LabelledDict)\nlab_meta_data = nwb.lab_meta_data\nDandiIcephysMetadata = lab_meta_data[\"DandiIcephysMetadata\"]\nDandiIcephysMetadata # (DandiIcephysMetadata)\nDandiIcephysMetadata.cell_id # (str) C1\nDandiIcephysMetadata.slice_id # (str) slice 1\nDandiIcephysMetadata.targeted_layer # (str) CeA\nDandiIcephysMetadata.inferred_layer # (str) CeA\nnwb.lab # (str) Kay Tye Lab\nnwb.institution # (str) Massachusetts Institute of Technology\nnwb.subject # (Subject)\nnwb.subject.age # (str) P302D\nnwb.subject.age__reference # (str) birth\nnwb.subject.description # (str) AAV5-DIO-ChR2-eYFP into DRN\nnwb.subject.genotype # (str) heterozygote\nnwb.subject.sex # (str) F\nnwb.subject.species # (str) Mus musculus\nnwb.subject.subject_id # (str) 23\nnwb.subject.date_of_birth # (datetime) 2014-05-26T00:00:00-07:00\nnwb.subject.strain # (str) DAT::Cre\nnwb.intracellular_recordings # (IntracellularRecordingsTable)\nnwb.intracellular_recordings.description # (str) A table to group together a stimulus and response from a single electrode and a single simultaneo...\nnwb.intracellular_recordings.colnames # (tuple) []\nnwb.intracellular_recordings.columns # (tuple) []\nnwb.intracellular_recordings.category_tables # (OrderedDict)\nnwb.intracellular_recordings.id # (ElementIdentifiers)\n# nwb.intracellular_recordings.to_dataframe() # (DataFrame) Convert to a pandas DataFrame with 86 rows and 0 columns\n# nwb.intracellular_recordings.to_dataframe().head() # (DataFrame) Show the first few rows of the pandas DataFrame\nnwb.icephys_simultaneous_recordings # (SimultaneousRecordingsTable)\nnwb.icephys_simultaneous_recordings.description # (str) A table for grouping different intracellular recordings from theIntracellularRecordingsTable tabl...\nnwb.icephys_simultaneous_recordings.colnames # (tuple) ['recordings']\nnwb.icephys_simultaneous_recordings.columns # (tuple)\nnwb.icephys_simultaneous_recordings.id # (ElementIdentifiers)\n# nwb.icephys_simultaneous_recordings.to_dataframe() # (DataFrame) Convert to a pandas DataFrame with 43 rows and 2 columns\n# nwb.icephys_simultaneous_recordings.to_dataframe().head() # (DataFrame) Show the first few rows of the pandas DataFrame\nnwb.icephys_simultaneous_recordings.recordings # (VectorIndex) Index for VectorData 'recordings'\n# nwb.icephys_simultaneous_recordings.recordings_index[0] # (DataFrame)\n# nwb.icephys_simultaneous_recordings.recordings_index[1] # (DataFrame)\n# nwb.icephys_simultaneous_recordings.recordings_index[2] # (DataFrame)\n# nwb.icephys_simultaneous_recordings.recordings_index[3] # (DataFrame)\n# ...\nnwb.icephys_sequential_recordings # (SequentialRecordingsTable)\nnwb.icephys_sequential_recordings.description # (str) A table for grouping different intracellular recording simultaneous_recordings from the Simultane...\nnwb.icephys_sequential_recordings.colnames # (tuple) ['simultaneous_recordings', 'stimulus_type']\nnwb.icephys_sequential_recordings.columns # (tuple)\nnwb.icephys_sequential_recordings.id # (ElementIdentifiers)\n# nwb.icephys_sequential_recordings.to_dataframe() # (DataFrame) Convert to a pandas DataFrame with 5 rows and 3 columns\n# nwb.icephys_sequential_recordings.to_dataframe().head() # (DataFrame) Show the first few rows of the pandas DataFrame\nnwb.icephys_sequential_recordings.simultaneous_recordings # (VectorIndex) Index for VectorData 'simultaneous_recordings'\n# nwb.icephys_sequential_recordings.simultaneous_recordings_index[0] # (DataFrame)\n# nwb.icephys_sequential_recordings.simultaneous_recordings_index[1] # (DataFrame)\n# nwb.icephys_sequential_recordings.simultaneous_recordings_index[2] # (DataFrame)\n# nwb.icephys_sequential_recordings.simultaneous_recordings_index[3] # (DataFrame)\n# ...\nnwb.icephys_sequential_recordings.stimulus_type # (VectorData) Column storing the type of stimulus used for the sequential recording"
      }
    ]
  },
  {
    "role": "user",
    "content": "Please summarize the above information in a jupytext notebook that introduces dandiset 001195 using the format described below.\n\nThe purpose of the notebook is to help researchers explore the dandiset and get started with a reanalysis.\n\nStart with an appropriate title for the notebook, such as \"Exploring Dandiset 001195: ...\" (that should be a markdown heading).\n\nInform the user that the notebook was generated with the assistance of AI, and that they should be cautious when interpreting the code or results.\n\nProvide an overview of the Dandiset. Include a link to the Dandiset of the form https://dandiarchive.org/dandiset/001195/0.250408.1733.\n\nSummarize what the notebook covers.\n\nList the packages that are required to run the notebook. Assume that these are already installed on the user's system. Do not include any pip install commands in the notebook.\n\nShow how to use the DANDI API to load assets.\n\nShow how to load and visualize data from the dandiset based on the above chat.\n\nGenerate all the good quality plots (without being redundant).\n\nLoad NWB data by streaming the remote file (as done in the chat) rather than downloading it.\n\nDo not use any functionality of pynwb or dandi that is not covered in the chat.\n\nYou should stick to material that is covered in the chat and do not hallucinate.\n\nThroughout the notebook, include explanatory markdown cells that guide the user through the process.\n\nThe notebook should be well-documented, and follow best practices Include comments in code cells to explain what each step does.\n\nThe Jupytext should use `# %% [markdown]` for markdown cells and `# %%` delimiters for the code cells.\n\nYour output should be in the format:\n\n<notebook>\nThe text of the jupytext notebook should appear here.\n</notebook>\n\nNo other text should be included in the response.\n"
  },
  {
    "role": "assistant",
    "content": "<notebook>\n# %% [markdown]\n# # Exploring Dandiset 001195: Separable Dorsal Raphe Dopamine Projections Mediate the Facets of Loneliness-like State\n#\n# *This notebook was generated with the assistance of AI. Please double-check code and interpretations before drawing scientific conclusions.*\n#\n# ---\n#\n# ## Overview\n#\n# This notebook provides an introduction and practical starting point for reanalyzing **Dandiset 001195**, which contains supporting data for the study:  \n# [\"Separable Dorsal Raphe Dopamine Projections Mediate the Facets of Loneliness-like State\"](https://dandiarchive.org/dandiset/001195/0.250408.1733)\n#\n# The dataset captures ex vivo patch-clamp electrophysiology and in vivo calcium imaging in mouse models, focusing on neural circuits underlying social motivation and loneliness-like states, specifically projections of dopamine neurons in the dorsal raphe nucleus (DRN).\n#\n# ---\n#\n# ## What This Notebook Covers\n#\n# - A brief exploration of the Dandiset contents and structure using the DANDI API\n# - Streaming and inspection of an NWB file containing intracellular electrophysiological data\n# - Extraction and simple visualization of a current clamp response and the corresponding stimulation protocol\n#\n# The goal is to help you get started working directly with NWB files in this Dandiset for your own analyses.\n#\n# ---\n#\n# ## Required Packages\n#\n# You will need the following Python packages already installed:\n#\n# - `dandi`\n# - `h5py`\n# - `remfile`\n# - `pynwb`\n# - `matplotlib`\n# - `numpy`\n#\n# ---\n#\n# Let's get started!\n\n# %%\n# Import required packages\nfrom dandi.dandiapi import DandiAPIClient\nimport remfile\nimport h5py\nimport pynwb\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# %% [markdown]\n# ## Listing Files in the Dandiset\n#\n# We'll use the DANDI API to connect to Dandiset 001195 and list some NWB asset file paths. This helps you select a file of interest for further exploration.\n\n# %%\n# Connect to the DANDI API and grab Dandiset 001195, version 0.250408.1733\ndandiset_id = \"001195\"\ndandiset_version = \"0.250408.1733\"\n\nclient = DandiAPIClient()\ndandiset = client.get_dandiset(dandiset_id, dandiset_version)\n\n# List the first 5 .nwb assets for a quick overview\nassets = list(dandiset.get_assets())\nnwb_files = [a.path for a in assets if a.path.endswith('.nwb')]\n\nprint(\"First 5 NWB files in this dandiset:\")\nfor path in nwb_files[:5]:\n    print(\" -\", path)\n\n# %% [markdown]\n# ## Streaming and Reading an NWB File Remotely\n#\n# Let's choose an example NWB file and demonstrate how to stream it using `remfile` and open it with `h5py` and `pynwb`, avoiding a local download.\n#\n# *We use `sub-23/sub-23_ses-20150324T134114_slice-slice-1_cell-C1_icephys.nwb` for demonstration.*\n\n# %%\n# Choose a sample NWB file path\nsample_nwb_path = \"sub-23/sub-23_ses-20150324T134114_slice-slice-1_cell-C1_icephys.nwb\"\n\n# Get download URL for the remote file using the DANDI API\nsample_asset = next(dandiset.get_assets_by_glob(sample_nwb_path))\nurl = sample_asset.download_url\nprint(\"Streaming from URL:\", url)\n\n# Open as a remote file (no local download)\nremote_file = remfile.File(url)\nh5_file = h5py.File(remote_file, 'r')\n\n# Open as an NWB file using pynwb\nio = pynwb.NWBHDF5IO(file=h5_file, load_namespaces=True)\nnwb = io.read()\nprint(\"Loaded NWB file with identifier:\", nwb.identifier)\n\n# %% [markdown]\n# ## Inspecting Metadata and Experimental Context\n#\n# Let's extract some key metadata from this file: subject information, genotype, anatomical target, and overall experiment context.\n\n# %%\nmeta = {\n    \"Session description\": nwb.session_description,\n    \"Experimenter\": nwb.experimenter,\n    \"Lab\": nwb.lab,\n    \"Institution\": nwb.institution,\n    \"Subject ID\": nwb.subject.subject_id,\n    \"Subject sex\": nwb.subject.sex,\n    \"Species\": nwb.subject.species,\n    \"Subject age\": nwb.subject.age,\n    \"Genotype\": nwb.subject.genotype,\n    \"Strain\": nwb.subject.strain,\n    \"Subject description\": nwb.subject.description,\n    \"Date of birth\": nwb.subject.date_of_birth.isoformat(),\n}\nfor k, v in meta.items():\n    print(f\"{k:>20s}: {v}\")\n\ncell_md = nwb.lab_meta_data[\"DandiIcephysMetadata\"]\nprint(\"\\nTargeted layer / region:\", cell_md.targeted_layer)\nprint(\"Cell ID:\", cell_md.cell_id)\n\n# %% [markdown]\n# ## Listing Available Recordings and Stimuli\n#\n# NWB files in this dandiset often contain multiple epochs of current-clamp recordings (\"current_clamp-response-XX-ch-YY\") and the corresponding stimulus protocols (\"stimulus-XX-ch-YY\").\n#\n# Let's list a few: \n\n# %%\n# List acquisition (recordings) and stimulus fields\nacquis_keys = list(nwb.acquisition.keys())\nstim_keys = list(nwb.stimulus.keys())\n\nprint(\"First 5 acquisition (recorded response) keys:\", acquis_keys[:5])\nprint(\"First 5 stimulus (input protocol) keys:\", stim_keys[:5])\n\n# %% [markdown]\n# ## Plotting a Current Clamp Stimulus and Response\n#\n# Let's plot the first episode of the current-clamp protocol, both the stimulus (injected current) and response (membrane voltage) from channel 0.\n\n# %%\n# Acquire and Stimulus objects for first episode and channel 0\nresp0 = nwb.acquisition[\"current_clamp-response-01-ch-0\"]\nstim0 = nwb.stimulus[\"stimulus-01-ch-0\"]\n\n# Convert the signal to physical units using conversion factors, as data are integer types.\n# For the response (volts): value = raw * conversion\n# For the stimulus (amperes): data is float64, use directly.\n\n# Time axis in seconds (sampling at 10 kHz)\nt = np.arange(resp0.data.shape[0]) / resp0.rate\n\n# Convert voltage response\nv = resp0.data[:] * resp0.conversion  # volts\n\n# Get stimulus current (amperes)\ni = stim0.data[:]\n\n# Plotting\nfig, (ax1, ax2) = plt.subplots(2, 1, sharex=True, figsize=(8,4), constrained_layout=True)\nax1.plot(t, i * 1e12)  # show in pA\nax1.set_ylabel(\"Injected current (pA)\")\nax1.set_title(\"Current Clamp: Episode 1, Channel 0\")\n\nax2.plot(t, v * 1e3)\nax2.set_ylabel(\"Membrane voltage (mV)\")\nax2.set_xlabel(\"Time (s)\")\nax2.set_xlim([0, t[-1]])\nplt.show()\n\n# %% [markdown]\n# ## Notes and Next Steps\n#\n# - This notebook demonstrated how to list assets, stream and open NWB files, inspect metadata, and plot a basic current-clamp episode from Dandiset 001195.\n# - You can choose and explore other assets using the same approach, e.g., iterating over different stimulus protocols, sweeps, or cells.\n# - For more advanced analyses (e.g., extracting spike times, fitting passive properties, analyzing response diversity across regions), further steps and domain-specific code will be necessary.\n#\n# ---\n#\n# We hope this serves as a foundation for your exploration of the \"Separable Dorsal Raphe Dopamine Projections Mediate the Facets of Loneliness-like State\" dataset!\n</notebook>\n"
  }
]