[
  {
    "role": "system",
    "content": [
      {
        "type": "text",
        "text": "The following is metadata about Dandiset 001195 version 0.250408.1733."
      },
      {
        "type": "text",
        "text": "{\n  \"id\": \"DANDI:001195/0.250408.1733\",\n  \"doi\": \"10.48324/dandi.001195/0.250408.1733\",\n  \"url\": \"https://dandiarchive.org/dandiset/001195/0.250408.1733\",\n  \"name\": \"Separable Dorsal Raphe Dopamine Projections Mediate the Facets of Loneliness-like State\",\n  \"about\": [\n    {\n      \"name\": \"dorsal raphe nucleus (DRN)\",\n      \"schemaKey\": \"Anatomy\",\n      \"identifier\": \"UBERON:0001950\"\n    },\n    {\n      \"name\": \"Central Amygdala (CeA)\",\n      \"schemaKey\": \"Anatomy\",\n      \"identifier\": \"UBERON:0001876\"\n    },\n    {\n      \"name\": \"Bed Nucleus of the Stria Terminalis (BNST)\",\n      \"schemaKey\": \"Anatomy\",\n      \"identifier\": \"UBERON:0001880\"\n    },\n    {\n      \"name\": \"Posterior Basolateral Amygdala (BLP)\",\n      \"schemaKey\": \"Anatomy\",\n      \"identifier\": \"UBERON:0006107\"\n    },\n    {\n      \"name\": \"social isolation\",\n      \"schemaKey\": \"GenericType\",\n      \"identifier\": \"http://purl.obolibrary.org/obo/GSSO_003702\"\n    }\n  ],\n  \"access\": [\n    {\n      \"status\": \"dandi:OpenAccess\",\n      \"schemaKey\": \"AccessRequirements\"\n    }\n  ],\n  \"license\": [\n    \"spdx:CC-BY-4.0\"\n  ],\n  \"version\": \"0.250408.1733\",\n  \"@context\": \"https://raw.githubusercontent.com/dandi/schema/master/releases/0.6.8/context.json\",\n  \"citation\": \"Keyes, Laurel; Lee, Christopher R.; Wichmann, Romy; Matthews, Gillian A. ; Tye, Kay M.  (2025) Separable Dorsal Raphe Dopamine Projections Mediate the Facets of Loneliness-like State (Version 0.250408.1733) [Data set]. DANDI Archive. https://doi.org/10.48324/dandi.001195/0.250408.1733\",\n  \"keywords\": [\n    \"optogenetics\",\n    \"behavior videos\",\n    \"calcium imaging\",\n    \"electrophysiology\",\n    \"Social Isolation\",\n    \"Social Motivation\",\n    \"mouse behavior\",\n    \"behavioral neuroscience\",\n    \"mouse model\",\n    \"Dorsal Raphe Nucleus (DRN)\",\n    \"Dopamine neurons\"\n  ],\n  \"protocol\": [],\n  \"schemaKey\": \"Dandiset\",\n  \"identifier\": \"DANDI:001195\",\n  \"repository\": \"https://dandiarchive.org\",\n  \"contributor\": [\n    {\n      \"name\": \"Keyes, Laurel\",\n      \"email\": \"lkeyes@salk.edu\",\n      \"roleName\": [\n        \"dcite:ContactPerson\"\n      ],\n      \"schemaKey\": \"Person\",\n      \"identifier\": \"0000-0001-5433-9948\",\n      \"affiliation\": [],\n      \"includeInCitation\": true\n    },\n    {\n      \"name\": \"Lee, Christopher R.\",\n      \"email\": \"chrlee@salk.edu\",\n      \"roleName\": [\n        \"dcite:Author\",\n        \"dcite:Conceptualization\",\n        \"dcite:DataCollector\",\n        \"dcite:FormalAnalysis\",\n        \"dcite:Researcher\",\n        \"dcite:DataCurator\"\n      ],\n      \"schemaKey\": \"Person\",\n      \"includeInCitation\": true\n    },\n    {\n      \"name\": \"Wichmann, Romy\",\n      \"roleName\": [\n        \"dcite:Researcher\",\n        \"dcite:DataCurator\"\n      ],\n      \"schemaKey\": \"Person\",\n      \"identifier\": \"0000-0002-4506-8813\",\n      \"includeInCitation\": true\n    },\n    {\n      \"name\": \"Matthews, Gillian A. \",\n      \"roleName\": [\n        \"dcite:Author\",\n        \"dcite:Conceptualization\",\n        \"dcite:DataCollector\",\n        \"dcite:DataCurator\"\n      ],\n      \"schemaKey\": \"Person\",\n      \"includeInCitation\": true\n    },\n    {\n      \"name\": \"Tye, Kay M. \",\n      \"roleName\": [\n        \"dcite:Conceptualization\",\n        \"dcite:Supervision\",\n        \"dcite:Author\"\n      ],\n      \"schemaKey\": \"Person\",\n      \"identifier\": \"0000-0002-2435-0182\",\n      \"includeInCitation\": true\n    },\n    {\n      \"name\": \"The JPB Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/05nzwyq50\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"New York Stem Cell Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/03n2a3p06\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"Klingenstein Third Generation Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/00cxc2y95\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"McKnight Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/003ghvj67\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"Clayton Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/00qw4ms08\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"Alfred P Sloan Foundation\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/052csg198\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"National Institute of Mental Health\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/05xj56w78\",\n      \"awardNumber\": \"R01-MH115920\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"National Institute of Diabetes and Digestive and Kidney Diseases: NIH Director's New Innovator Award\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/00adh9b73\",\n      \"awardNumber\": \"DP2-DK102256\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"National Center for Complementary and Integrative Health Pioneer Award (NCCIH)\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/00190t495\",\n      \"awardNumber\": \"DP1-AT009925\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"Charles A. King Trust Postdoctoral Research Fellowship Program\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"MIT Summer Research Program, supported by the Center for Brains, Minds and Machines (CBMM)\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"National Science Foundation Science and Technology Centers Award\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"identifier\": \"https://ror.org/021nxhr62\",\n      \"awardNumber\": \"CCF-1231216\",\n      \"includeInCitation\": false\n    },\n    {\n      \"name\": \"Dolby Family Fund\",\n      \"roleName\": [\n        \"dcite:Funder\"\n      ],\n      \"schemaKey\": \"Organization\",\n      \"includeInCitation\": false\n    }\n  ],\n  \"dateCreated\": \"2024-09-18T17:50:14.994221+00:00\",\n  \"description\": \"Supporting data for the publication \\\"Separable Dorsal Raphe Dopamine Projections Mediate the Facets of Loneliness-like State\\\" by Christopher R. Lee, Gillian A. Matthews, Mackenzie E. Lemieux, Elizabeth M. Wasserlein, Matilde Borio, Raymundo L. Miranda, Laurel R. Keyes, Gates P. Schneider, Caroline Jia, Andrea Tran, Faith Aloboudi, May G. Chan, Enzo Peroni, Grace S. Pereira, Alba L\\u00f3pez-Moraga, Anna Pall\\u00e9, Eyal Y. Kimchi, Nancy Padilla-Coreano, Romy Wichmann, Kay M. Tye.  bioRxiv 2025.02.03.636224; doi: https://doi.org/10.1101/2025.02.03.636224.  \\nThis dataset includes both in vivo calcium imaging data with supporting behavioral videos and ex vivo patch-clamp electrophysiology recordings.\\n\\nEphys Patching data also used in earlier pre-print under the title: \\\"Separable Dorsal Raphe Dopamine Projections Mediate Sociability and Valence\\\" by Gillian A. Matthews, Mackenzie E. Lemieux, Elizabeth M. Brewer, Matilde Borio, Raymundo Miranda, Laurel R. Keyes, Enzo Peroni, Grace S. Pereira, Alba Lopez-Moraga, Anna Pall\\u00e9, Christopher R. Lee, Eyal Y. Kimchi, Nancy Padilla-Coreano, Romy Wichmann, Kay M. Tye.  Research Square. 2021 Dec 3. doi: 10.21203/rs.3.rs-1025403/v1.\",\n  \"publishedBy\": {\n    \"id\": \"urn:uuid:e7b589a6-9018-44fd-8e71-5cba081330b2\",\n    \"name\": \"DANDI publish\",\n    \"endDate\": \"2025-04-08T17:33:12.753743+00:00\",\n    \"schemaKey\": \"PublishActivity\",\n    \"startDate\": \"2025-04-08T17:33:12.753743+00:00\",\n    \"wasAssociatedWith\": [\n      {\n        \"id\": \"urn:uuid:b6817d41-1f9c-4e4a-8e13-227e799e96c4\",\n        \"name\": \"DANDI API\",\n        \"version\": \"0.1.0\",\n        \"schemaKey\": \"Software\",\n        \"identifier\": \"RRID:SCR_017571\"\n      }\n    ]\n  },\n  \"studyTarget\": [\n    \"Affiliative social connections facilitate well-being and survival in numerous species. Engaging in social interactions requires positive or negative motivational drive, elicited through coordinated activity across neural circuits. However, the identity, interconnectivity, and functional encoding of social information within these circuits remains poorly understood. Here, we focus on downstream projections of dorsal raphe nucleus (DRN) dopamine neurons (DRNDAT), which we previously implicated in social motivation alongside an aversive affective state. We show that three prominent DRNDAT projections \\u2013 to the bed nucleus of the stria terminalis (BNST), central amygdala (CeA), and posterior basolateral amygdala (BLP) \\u2013 play separable roles in behavior, despite substantial collateralization. Photoactivation of the DRNDAT-CeA projection promoted social behavior and photostimulation of the DRNDAT-BNST projection promoted exploratory behavior, while the DRNDAT-BLP projection supported place avoidance, suggesting a negative affective state. Downstream regions showed diverse receptor expression, poising DRNDAT neurons to act through dopamine, neuropeptide, and glutamate transmission. Furthermore, we show ex vivo that the effect of DRNDAT photostimulation on downstream neuron excitability depended on region and baseline cell properties, resulting in excitatory responses in BNST cells and diverse responses in CeA and BLP. Finally, in vivo microendoscopic cellular-resolution recordings in the CeA with DRNDAT photostimulation revealed a correlation between social behavior and neurons excited by social stimuli\\u2013 suggesting that increased dopamine tone may recruit different CeA neurons to social ensembles. Collectively, these circuit features may facilitate a coordinated, but flexible, response in the presence of social stimuli that can be flexibly guided based on the internal social homeostatic need state of the individual.\"\n  ],\n  \"assetsSummary\": {\n    \"species\": [\n      {\n        \"name\": \"Mus musculus - House mouse\",\n        \"schemaKey\": \"SpeciesType\",\n        \"identifier\": \"http://purl.obolibrary.org/obo/NCBITaxon_10090\"\n      }\n    ],\n    \"approach\": [\n      {\n        \"name\": \"electrophysiological approach\",\n        \"schemaKey\": \"ApproachType\"\n      },\n      {\n        \"name\": \"microscopy approach; cell population imaging\",\n        \"schemaKey\": \"ApproachType\"\n      }\n    ],\n    \"schemaKey\": \"AssetsSummary\",\n    \"dataStandard\": [\n      {\n        \"name\": \"Neurodata Without Borders (NWB)\",\n        \"schemaKey\": \"StandardsType\",\n        \"identifier\": \"RRID:SCR_015242\"\n      }\n    ],\n    \"numberOfBytes\": 69986574127,\n    \"numberOfCells\": 131,\n    \"numberOfFiles\": 230,\n    \"numberOfSamples\": 8,\n    \"numberOfSubjects\": 34,\n    \"variableMeasured\": [\n      \"CurrentClampStimulusSeries\",\n      \"VoltageClampSeries\",\n      \"VoltageClampStimulusSeries\",\n      \"CurrentClampSeries\",\n      \"OpticalChannel\",\n      \"ImagingPlane\",\n      \"PlaneSegmentation\",\n      \"ProcessingModule\",\n      \"OnePhotonSeries\"\n    ],\n    \"measurementTechnique\": [\n      {\n        \"name\": \"voltage clamp technique\",\n        \"schemaKey\": \"MeasurementTechniqueType\"\n      },\n      {\n        \"name\": \"current clamp technique\",\n        \"schemaKey\": \"MeasurementTechniqueType\"\n      },\n      {\n        \"name\": \"one-photon microscopy technique\",\n        \"schemaKey\": \"MeasurementTechniqueType\"\n      },\n      {\n        \"name\": \"analytical technique\",\n        \"schemaKey\": \"MeasurementTechniqueType\"\n      },\n      {\n        \"name\": \"surgical technique\",\n        \"schemaKey\": \"MeasurementTechniqueType\"\n      }\n    ]\n  },\n  \"datePublished\": \"2025-04-08T17:33:12.753743+00:00\",\n  \"schemaVersion\": \"0.6.8\",\n  \"ethicsApproval\": [\n    {\n      \"schemaKey\": \"EthicsApproval\",\n      \"identifier\": \"All procedures involving animals were conducted in accordance with NIH guidelines and approved by the MIT Committee on Animal Care or the Salk Institute Institutional Animal Care and Use Committee\",\n      \"contactPoint\": {\n        \"email\": \"rwichmann@salk.edu\",\n        \"schemaKey\": \"ContactPoint\"\n      }\n    }\n  ],\n  \"wasGeneratedBy\": [\n    {\n      \"name\": \"Separable Dorsal Raphe Dopamine Projections Mediate Sociability and Valence\",\n      \"schemaKey\": \"Project\",\n      \"identifier\": \"https://www.researchsquare.com/article/rs-1025403/v1\",\n      \"description\": \"Affiliative social connections facilitate well-being and survival in numerous species. Engaging in social interactions requires positive and negative motivational drive, elicited through coordinated activity across neural circuits. However, the identity, interconnectivity, and functional encoding of social information within these circuits remains poorly understood. Here, we focused on downstream projections of dorsal raphe nucleus (DRN) dopamine neurons (DRNDAT), which we previously implicated in \\u2018negative drive\\u2019-induced social motivation. We show that three prominent DRNDAT projections \\u2013 to the bed nucleus of the stria terminalis (BNST), central amygdala (CeA), and posterior basolateral amygdala (BLP) \\u2013 play separable roles in behavior, despite substantial collateralization. Photoactivation of the DRNDAT-CeA projection promoted social behavior and photoactivation of the DRNDAT-BNST projection promoted exploratory behavior, while the DRNDAT-BLP projection supported place avoidance, suggesting a negative affective state. Downstream regions showed diverse, region-specific, receptor expression, poising DRNDAT neurons to act through dopamine, neuropeptide, and glutamate transmission. Furthermore, we show ex vivo that the effect of DRNDAT photostimulation on downstream neuron excitability was predicted by baseline cell properties, suggesting cell-type-specific modulation. Collectively, these data indicate that DRNDAT neurons may bias behavior via precise modulation of cellular activity in broadly-distributed target structures.\"\n    }\n  ],\n  \"acknowledgement\": \"K.M.T. is the Wylie Vale Chair at the Salk Institute for Biological Studies, a New York Stem Cell Foundation - Robertson Investigator, and a McKnight Scholar. This work was supported by funding from the JPB Foundation, Alfred P Sloan Foundation, New York Stem Cell Foundation, Klingenstein Foundation, McKnight Foundation, Clayton Foundation, Dolby Family Fund, R01-MH115920 (NIMH), the NIH Director\\u2019s New Innovator Award DP2-DK102256 (NIDDK), and Pioneer Award DP1-AT009925 (NCCIH). G.A.M was supported by a Postdoctoral Research Fellowship from the Charles A. King Trust.  R.L.M. was funded through the MSRP program in the Brains & Cognitive Sciences Department at MIT, supported by the Center for Brains, Minds and Machines (CBMM), and funded by NSF STC award CCF\\u0002 1231216. E.M.W was supported by a summer scholarship from Johnson & Johnson. We thank C. Leppla, J. Olsen, P. Namburi, V. Barth, J. Wang, K. Batra, A. Brown, and A. Libster for technical advice, all members of the Tye Lab for helpful discussion, and advice from the CellProfiler team at the Broad Institute. We also thank Rachel Neve for the HSV construct, and Charu Ramakrishnan & Karl Deisseroth for AAV5-fDIO-eYFP. \",\n  \"relatedResource\": [\n    {\n      \"url\": \"https://doi.org/10.7554/eLife.105955.1\",\n      \"name\": \"Separable Dorsal Raphe Dopamine Projections mediate the Facets of Loneliness-like state\",\n      \"relation\": \"dcite:Describes\",\n      \"schemaKey\": \"Resource\",\n      \"identifier\": \"https://doi.org/10.7554/eLife.105955.1\",\n      \"repository\": \"eLife\",\n      \"resourceType\": \"dcite:JournalArticle\"\n    },\n    {\n      \"url\": \"https://doi.org/10.21203/rs.3.rs-1025403/v1\",\n      \"name\": \"Separable Dorsal Raphe Dopamine Projections Mediate Sociability and Valence\",\n      \"relation\": \"dcite:Describes\",\n      \"schemaKey\": \"Resource\",\n      \"identifier\": \"https://doi.org/10.21203/rs.3.rs-1025403/v1\",\n      \"repository\": \"Research Square\",\n      \"resourceType\": \"dcite:Preprint\"\n    }\n  ],\n  \"manifestLocation\": [\n    \"https://dandiarchive.s3.amazonaws.com/dandisets/001195/0.250408.1733/assets.yaml\"\n  ]\n}"
      }
    ]
  },
  {
    "role": "system",
    "content": [
      {
        "type": "text",
        "text": "The following is a listing of some of the files in the Dandiset."
      },
      {
        "type": "text",
        "text": "sub-23/sub-23_ses-20150324T134114_slice-slice-1_cell-C1_icephys.nwb\nsub-23/sub-23_ses-20150324T161217_slice-slice-2_cell-B3_icephys.nwb\nsub-235/sub-235_ses-20200921T142415_slice-slice-1_cell-C3_icephys.nwb\nsub-23/sub-23_ses-20150324T154615_slice-slice-2_cell-B2_icephys.nwb\nsub-23/sub-23_ses-20150324T152016_slice-slice-2_cell-B1_icephys.nwb\nsub-235/sub-235_ses-20200921T150553_slice-slice-1_cell-C5_icephys.nwb\nsub-235/sub-235_ses-20200921T131057_slice-slice-1_cell-C1_icephys.nwb\nsub-235/sub-235_ses-20200921T164032_slice-slice-2_cell-C8_icephys.nwb\nsub-235/sub-235_ses-20200921T134852_slice-slice-1_cell-C2_icephys.nwb\nsub-235/sub-235_ses-20200921T172736_slice-slice-2_cell-C10_icephys.nwb"
      }
    ]
  },
  {
    "role": "system",
    "content": [
      {
        "type": "text",
        "text": "The following is metadata and usage information about the file sub-23/sub-23_ses-20150324T134114_slice-slice-1_cell-C1_icephys.nwb."
      },
      {
        "type": "text",
        "text": "\nimport pynwb\nimport h5py\nimport remfile\n\n# Load\nfrom dandi.dandiapi import DandiAPIClient\n\nclient = DandiAPIClient()\ndandiset = client.get_dandiset(\"001195\", \"0.250408.1733\")\nurl = next(dandiset.get_assets_by_glob(\"sub-23/sub-23_ses-20150324T134114_slice-slice-1_cell-C1_icephys.nwb\")).download_url\n\nremote_file = remfile.File(url)\nh5_file = h5py.File(remote_file)\nio = pynwb.NWBHDF5IO(file=h5_file)\nnwb = io.read()\n\nnwb # (NWBFile)\nnwb.session_description # (str) episodic stimulation\nnwb.identifier # (str) a18b081c-3b63-45df-b702-fc3640aef3de\nnwb.session_start_time # (datetime) 2015-03-24T13:41:14-07:00\nnwb.timestamps_reference_time # (datetime) 2015-03-24T13:41:14-07:00\nnwb.file_create_date # (list) [datetime.datetime(2025, 4, 3, 16, 56, 47, 408514, tzinfo=tzoffset(None, -25200))]\nnwb.experimenter # (tuple) ['Matthews, Gillian']\nnwb.icephys_electrodes # (LabelledDict)\nicephys_electrodes = nwb.icephys_electrodes\nelectrode_0 = icephys_electrodes[\"electrode-0\"]\nelectrode_0 # (IntracellularElectrode)\nelectrode_0.description # (str) no description\nelectrode_0.device # (Device)\nelectrode_0.device.description # (str) no description\nelectrode_1 = icephys_electrodes[\"electrode-1\"]\nelectrode_1 # (IntracellularElectrode)\nelectrode_1.description # (str) no description\nelectrode_1.device # (Device)\nelectrode_1.device.description # (str) no description\nnwb.acquisition # (LabelledDict)\nacquisition = nwb.acquisition\ncurrent_clamp_response_01_ch_0 = acquisition[\"current_clamp-response-01-ch-0\"]\ncurrent_clamp_response_01_ch_0 # (CurrentClampSeries)\ncurrent_clamp_response_01_ch_0.starting_time # (float64) 0.0\ncurrent_clamp_response_01_ch_0.rate # (float64) 10000.0\ncurrent_clamp_response_01_ch_0.resolution # (float64) -1.0\ncurrent_clamp_response_01_ch_0.comments # (str) no comments\ncurrent_clamp_response_01_ch_0.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_01_ch_0.conversion # (float64) 3.051757880712104e-05\ncurrent_clamp_response_01_ch_0.offset # (float64) 0.0\ncurrent_clamp_response_01_ch_0.unit # (str) volts\ncurrent_clamp_response_01_ch_0.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_01_ch_0.data[:] # Access all data\n# current_clamp_response_01_ch_0.data[0:n] # Access first n elements\ncurrent_clamp_response_01_ch_0.starting_time_unit # (str) seconds\ncurrent_clamp_response_01_ch_0.gain # (float64) nan\ncurrent_clamp_response_01_ch_0.stimulus_description # (str) N/A\ncurrent_clamp_response_01_ch_0.electrode # (IntracellularElectrode)\ncurrent_clamp_response_01_ch_0.electrode.description # (str) no description\ncurrent_clamp_response_01_ch_0.electrode.device # (Device)\ncurrent_clamp_response_01_ch_0.electrode.device.description # (str) no description\ncurrent_clamp_response_01_ch_1 = acquisition[\"current_clamp-response-01-ch-1\"]\ncurrent_clamp_response_01_ch_1 # (CurrentClampSeries)\ncurrent_clamp_response_01_ch_1.starting_time # (float64) 0.0\ncurrent_clamp_response_01_ch_1.rate # (float64) 10000.0\ncurrent_clamp_response_01_ch_1.resolution # (float64) -1.0\ncurrent_clamp_response_01_ch_1.comments # (str) no comments\ncurrent_clamp_response_01_ch_1.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_01_ch_1.conversion # (float64) 6.103515335098577e-13\ncurrent_clamp_response_01_ch_1.offset # (float64) 0.0\ncurrent_clamp_response_01_ch_1.unit # (str) volts\ncurrent_clamp_response_01_ch_1.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_01_ch_1.data[:] # Access all data\n# current_clamp_response_01_ch_1.data[0:n] # Access first n elements\ncurrent_clamp_response_01_ch_1.starting_time_unit # (str) seconds\ncurrent_clamp_response_01_ch_1.gain # (float64) nan\ncurrent_clamp_response_01_ch_1.stimulus_description # (str) N/A\ncurrent_clamp_response_01_ch_1.electrode # (IntracellularElectrode)\ncurrent_clamp_response_01_ch_1.electrode.description # (str) no description\ncurrent_clamp_response_01_ch_1.electrode.device # (Device)\ncurrent_clamp_response_01_ch_1.electrode.device.description # (str) no description\ncurrent_clamp_response_02_ch_0 = acquisition[\"current_clamp-response-02-ch-0\"]\ncurrent_clamp_response_02_ch_0 # (CurrentClampSeries)\ncurrent_clamp_response_02_ch_0.starting_time # (float64) 1.0\ncurrent_clamp_response_02_ch_0.rate # (float64) 10000.0\ncurrent_clamp_response_02_ch_0.resolution # (float64) -1.0\ncurrent_clamp_response_02_ch_0.comments # (str) no comments\ncurrent_clamp_response_02_ch_0.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_02_ch_0.conversion # (float64) 3.051757880712104e-05\ncurrent_clamp_response_02_ch_0.offset # (float64) 0.0\ncurrent_clamp_response_02_ch_0.unit # (str) volts\ncurrent_clamp_response_02_ch_0.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_02_ch_0.data[:] # Access all data\n# current_clamp_response_02_ch_0.data[0:n] # Access first n elements\ncurrent_clamp_response_02_ch_0.starting_time_unit # (str) seconds\ncurrent_clamp_response_02_ch_0.gain # (float64) nan\ncurrent_clamp_response_02_ch_0.stimulus_description # (str) N/A\ncurrent_clamp_response_02_ch_0.electrode # (IntracellularElectrode)\ncurrent_clamp_response_02_ch_0.electrode.description # (str) no description\ncurrent_clamp_response_02_ch_0.electrode.device # (Device)\ncurrent_clamp_response_02_ch_0.electrode.device.description # (str) no description\ncurrent_clamp_response_02_ch_1 = acquisition[\"current_clamp-response-02-ch-1\"]\ncurrent_clamp_response_02_ch_1 # (CurrentClampSeries)\ncurrent_clamp_response_02_ch_1.starting_time # (float64) 1.0\ncurrent_clamp_response_02_ch_1.rate # (float64) 10000.0\ncurrent_clamp_response_02_ch_1.resolution # (float64) -1.0\ncurrent_clamp_response_02_ch_1.comments # (str) no comments\ncurrent_clamp_response_02_ch_1.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_02_ch_1.conversion # (float64) 6.103515335098577e-13\ncurrent_clamp_response_02_ch_1.offset # (float64) 0.0\ncurrent_clamp_response_02_ch_1.unit # (str) volts\ncurrent_clamp_response_02_ch_1.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_02_ch_1.data[:] # Access all data\n# current_clamp_response_02_ch_1.data[0:n] # Access first n elements\ncurrent_clamp_response_02_ch_1.starting_time_unit # (str) seconds\ncurrent_clamp_response_02_ch_1.gain # (float64) nan\ncurrent_clamp_response_02_ch_1.stimulus_description # (str) N/A\ncurrent_clamp_response_02_ch_1.electrode # (IntracellularElectrode)\ncurrent_clamp_response_02_ch_1.electrode.description # (str) no description\ncurrent_clamp_response_02_ch_1.electrode.device # (Device)\ncurrent_clamp_response_02_ch_1.electrode.device.description # (str) no description\ncurrent_clamp_response_03_ch_0 = acquisition[\"current_clamp-response-03-ch-0\"]\ncurrent_clamp_response_03_ch_0 # (CurrentClampSeries)\ncurrent_clamp_response_03_ch_0.starting_time # (float64) 2.0\ncurrent_clamp_response_03_ch_0.rate # (float64) 10000.0\ncurrent_clamp_response_03_ch_0.resolution # (float64) -1.0\ncurrent_clamp_response_03_ch_0.comments # (str) no comments\ncurrent_clamp_response_03_ch_0.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_03_ch_0.conversion # (float64) 3.051757880712104e-05\ncurrent_clamp_response_03_ch_0.offset # (float64) 0.0\ncurrent_clamp_response_03_ch_0.unit # (str) volts\ncurrent_clamp_response_03_ch_0.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_03_ch_0.data[:] # Access all data\n# current_clamp_response_03_ch_0.data[0:n] # Access first n elements\ncurrent_clamp_response_03_ch_0.starting_time_unit # (str) seconds\ncurrent_clamp_response_03_ch_0.gain # (float64) nan\ncurrent_clamp_response_03_ch_0.stimulus_description # (str) N/A\ncurrent_clamp_response_03_ch_0.electrode # (IntracellularElectrode)\ncurrent_clamp_response_03_ch_0.electrode.description # (str) no description\ncurrent_clamp_response_03_ch_0.electrode.device # (Device)\ncurrent_clamp_response_03_ch_0.electrode.device.description # (str) no description\ncurrent_clamp_response_03_ch_1 = acquisition[\"current_clamp-response-03-ch-1\"]\ncurrent_clamp_response_03_ch_1 # (CurrentClampSeries)\ncurrent_clamp_response_03_ch_1.starting_time # (float64) 2.0\ncurrent_clamp_response_03_ch_1.rate # (float64) 10000.0\ncurrent_clamp_response_03_ch_1.resolution # (float64) -1.0\ncurrent_clamp_response_03_ch_1.comments # (str) no comments\ncurrent_clamp_response_03_ch_1.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_03_ch_1.conversion # (float64) 6.103515335098577e-13\ncurrent_clamp_response_03_ch_1.offset # (float64) 0.0\ncurrent_clamp_response_03_ch_1.unit # (str) volts\ncurrent_clamp_response_03_ch_1.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_03_ch_1.data[:] # Access all data\n# current_clamp_response_03_ch_1.data[0:n] # Access first n elements\ncurrent_clamp_response_03_ch_1.starting_time_unit # (str) seconds\ncurrent_clamp_response_03_ch_1.gain # (float64) nan\ncurrent_clamp_response_03_ch_1.stimulus_description # (str) N/A\ncurrent_clamp_response_03_ch_1.electrode # (IntracellularElectrode)\ncurrent_clamp_response_03_ch_1.electrode.description # (str) no description\ncurrent_clamp_response_03_ch_1.electrode.device # (Device)\ncurrent_clamp_response_03_ch_1.electrode.device.description # (str) no description\ncurrent_clamp_response_04_ch_0 = acquisition[\"current_clamp-response-04-ch-0\"]\ncurrent_clamp_response_04_ch_0 # (CurrentClampSeries)\ncurrent_clamp_response_04_ch_0.starting_time # (float64) 3.0\ncurrent_clamp_response_04_ch_0.rate # (float64) 10000.0\ncurrent_clamp_response_04_ch_0.resolution # (float64) -1.0\ncurrent_clamp_response_04_ch_0.comments # (str) no comments\ncurrent_clamp_response_04_ch_0.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_04_ch_0.conversion # (float64) 3.051757880712104e-05\ncurrent_clamp_response_04_ch_0.offset # (float64) 0.0\ncurrent_clamp_response_04_ch_0.unit # (str) volts\ncurrent_clamp_response_04_ch_0.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_04_ch_0.data[:] # Access all data\n# current_clamp_response_04_ch_0.data[0:n] # Access first n elements\ncurrent_clamp_response_04_ch_0.starting_time_unit # (str) seconds\ncurrent_clamp_response_04_ch_0.gain # (float64) nan\ncurrent_clamp_response_04_ch_0.stimulus_description # (str) N/A\ncurrent_clamp_response_04_ch_0.electrode # (IntracellularElectrode)\ncurrent_clamp_response_04_ch_0.electrode.description # (str) no description\ncurrent_clamp_response_04_ch_0.electrode.device # (Device)\ncurrent_clamp_response_04_ch_0.electrode.device.description # (str) no description\ncurrent_clamp_response_04_ch_1 = acquisition[\"current_clamp-response-04-ch-1\"]\ncurrent_clamp_response_04_ch_1 # (CurrentClampSeries)\ncurrent_clamp_response_04_ch_1.starting_time # (float64) 3.0\ncurrent_clamp_response_04_ch_1.rate # (float64) 10000.0\ncurrent_clamp_response_04_ch_1.resolution # (float64) -1.0\ncurrent_clamp_response_04_ch_1.comments # (str) no comments\ncurrent_clamp_response_04_ch_1.description # (str) Response to: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\ncurrent_clamp_response_04_ch_1.conversion # (float64) 6.103515335098577e-13\ncurrent_clamp_response_04_ch_1.offset # (float64) 0.0\ncurrent_clamp_response_04_ch_1.unit # (str) volts\ncurrent_clamp_response_04_ch_1.data # (Dataset) shape (3000,); dtype int16\n# current_clamp_response_04_ch_1.data[:] # Access all data\n# current_clamp_response_04_ch_1.data[0:n] # Access first n elements\ncurrent_clamp_response_04_ch_1.starting_time_unit # (str) seconds\ncurrent_clamp_response_04_ch_1.gain # (float64) nan\ncurrent_clamp_response_04_ch_1.stimulus_description # (str) N/A\ncurrent_clamp_response_04_ch_1.electrode # (IntracellularElectrode)\ncurrent_clamp_response_04_ch_1.electrode.description # (str) no description\ncurrent_clamp_response_04_ch_1.electrode.device # (Device)\ncurrent_clamp_response_04_ch_1.electrode.device.description # (str) no description\n# ...\n# Other fields: current_clamp-response-05-ch-0, current_clamp-response-05-ch-1, current_clamp-response-06-ch-0, current_clamp-response-06-ch-1, current_clamp-response-07-ch-0, current_clamp-response-07-ch-1, current_clamp-response-08-ch-0, current_clamp-response-08-ch-1, current_clamp-response-09-ch-0, current_clamp-response-09-ch-1, current_clamp-response-10-ch-0, current_clamp-response-10-ch-1, current_clamp-response-11-ch-0, current_clamp-response-11-ch-1, current_clamp-response-12-ch-0\n# ... and 64 more fields\nnwb.stimulus # (LabelledDict)\nstimulus = nwb.stimulus\nstimulus_01_ch_0 = stimulus[\"stimulus-01-ch-0\"]\nstimulus_01_ch_0 # (CurrentClampStimulusSeries)\nstimulus_01_ch_0.starting_time # (float64) 0.0\nstimulus_01_ch_0.rate # (float64) 10000.0\nstimulus_01_ch_0.resolution # (float64) -1.0\nstimulus_01_ch_0.comments # (str) no comments\nstimulus_01_ch_0.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_01_ch_0.conversion # (float64) 1e-12\nstimulus_01_ch_0.offset # (float64) 0.0\nstimulus_01_ch_0.unit # (str) amperes\nstimulus_01_ch_0.data # (Dataset) shape (3000,); dtype float64\n# stimulus_01_ch_0.data[:] # Access all data\n# stimulus_01_ch_0.data[0:n] # Access first n elements\nstimulus_01_ch_0.starting_time_unit # (str) seconds\nstimulus_01_ch_0.gain # (float64) nan\nstimulus_01_ch_0.stimulus_description # (str) N/A\nstimulus_01_ch_0.electrode # (IntracellularElectrode)\nstimulus_01_ch_0.electrode.description # (str) no description\nstimulus_01_ch_0.electrode.device # (Device)\nstimulus_01_ch_0.electrode.device.description # (str) no description\nstimulus_01_ch_1 = stimulus[\"stimulus-01-ch-1\"]\nstimulus_01_ch_1 # (CurrentClampStimulusSeries)\nstimulus_01_ch_1.starting_time # (float64) 0.0\nstimulus_01_ch_1.rate # (float64) 10000.0\nstimulus_01_ch_1.resolution # (float64) -1.0\nstimulus_01_ch_1.comments # (str) no comments\nstimulus_01_ch_1.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_01_ch_1.conversion # (float64) 0.001\nstimulus_01_ch_1.offset # (float64) 0.0\nstimulus_01_ch_1.unit # (str) amperes\nstimulus_01_ch_1.data # (Dataset) shape (3000,); dtype float64\n# stimulus_01_ch_1.data[:] # Access all data\n# stimulus_01_ch_1.data[0:n] # Access first n elements\nstimulus_01_ch_1.starting_time_unit # (str) seconds\nstimulus_01_ch_1.gain # (float64) nan\nstimulus_01_ch_1.stimulus_description # (str) N/A\nstimulus_01_ch_1.electrode # (IntracellularElectrode)\nstimulus_01_ch_1.electrode.description # (str) no description\nstimulus_01_ch_1.electrode.device # (Device)\nstimulus_01_ch_1.electrode.device.description # (str) no description\nstimulus_02_ch_0 = stimulus[\"stimulus-02-ch-0\"]\nstimulus_02_ch_0 # (CurrentClampStimulusSeries)\nstimulus_02_ch_0.starting_time # (float64) 1.0\nstimulus_02_ch_0.rate # (float64) 10000.0\nstimulus_02_ch_0.resolution # (float64) -1.0\nstimulus_02_ch_0.comments # (str) no comments\nstimulus_02_ch_0.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_02_ch_0.conversion # (float64) 1e-12\nstimulus_02_ch_0.offset # (float64) 0.0\nstimulus_02_ch_0.unit # (str) amperes\nstimulus_02_ch_0.data # (Dataset) shape (3000,); dtype float64\n# stimulus_02_ch_0.data[:] # Access all data\n# stimulus_02_ch_0.data[0:n] # Access first n elements\nstimulus_02_ch_0.starting_time_unit # (str) seconds\nstimulus_02_ch_0.gain # (float64) nan\nstimulus_02_ch_0.stimulus_description # (str) N/A\nstimulus_02_ch_0.electrode # (IntracellularElectrode)\nstimulus_02_ch_0.electrode.description # (str) no description\nstimulus_02_ch_0.electrode.device # (Device)\nstimulus_02_ch_0.electrode.device.description # (str) no description\nstimulus_02_ch_1 = stimulus[\"stimulus-02-ch-1\"]\nstimulus_02_ch_1 # (CurrentClampStimulusSeries)\nstimulus_02_ch_1.starting_time # (float64) 1.0\nstimulus_02_ch_1.rate # (float64) 10000.0\nstimulus_02_ch_1.resolution # (float64) -1.0\nstimulus_02_ch_1.comments # (str) no comments\nstimulus_02_ch_1.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_02_ch_1.conversion # (float64) 0.001\nstimulus_02_ch_1.offset # (float64) 0.0\nstimulus_02_ch_1.unit # (str) amperes\nstimulus_02_ch_1.data # (Dataset) shape (3000,); dtype float64\n# stimulus_02_ch_1.data[:] # Access all data\n# stimulus_02_ch_1.data[0:n] # Access first n elements\nstimulus_02_ch_1.starting_time_unit # (str) seconds\nstimulus_02_ch_1.gain # (float64) nan\nstimulus_02_ch_1.stimulus_description # (str) N/A\nstimulus_02_ch_1.electrode # (IntracellularElectrode)\nstimulus_02_ch_1.electrode.description # (str) no description\nstimulus_02_ch_1.electrode.device # (Device)\nstimulus_02_ch_1.electrode.device.description # (str) no description\nstimulus_03_ch_0 = stimulus[\"stimulus-03-ch-0\"]\nstimulus_03_ch_0 # (CurrentClampStimulusSeries)\nstimulus_03_ch_0.starting_time # (float64) 2.0\nstimulus_03_ch_0.rate # (float64) 10000.0\nstimulus_03_ch_0.resolution # (float64) -1.0\nstimulus_03_ch_0.comments # (str) no comments\nstimulus_03_ch_0.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_03_ch_0.conversion # (float64) 1e-12\nstimulus_03_ch_0.offset # (float64) 0.0\nstimulus_03_ch_0.unit # (str) amperes\nstimulus_03_ch_0.data # (Dataset) shape (3000,); dtype float64\n# stimulus_03_ch_0.data[:] # Access all data\n# stimulus_03_ch_0.data[0:n] # Access first n elements\nstimulus_03_ch_0.starting_time_unit # (str) seconds\nstimulus_03_ch_0.gain # (float64) nan\nstimulus_03_ch_0.stimulus_description # (str) N/A\nstimulus_03_ch_0.electrode # (IntracellularElectrode)\nstimulus_03_ch_0.electrode.description # (str) no description\nstimulus_03_ch_0.electrode.device # (Device)\nstimulus_03_ch_0.electrode.device.description # (str) no description\nstimulus_03_ch_1 = stimulus[\"stimulus-03-ch-1\"]\nstimulus_03_ch_1 # (CurrentClampStimulusSeries)\nstimulus_03_ch_1.starting_time # (float64) 2.0\nstimulus_03_ch_1.rate # (float64) 10000.0\nstimulus_03_ch_1.resolution # (float64) -1.0\nstimulus_03_ch_1.comments # (str) no comments\nstimulus_03_ch_1.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_03_ch_1.conversion # (float64) 0.001\nstimulus_03_ch_1.offset # (float64) 0.0\nstimulus_03_ch_1.unit # (str) amperes\nstimulus_03_ch_1.data # (Dataset) shape (3000,); dtype float64\n# stimulus_03_ch_1.data[:] # Access all data\n# stimulus_03_ch_1.data[0:n] # Access first n elements\nstimulus_03_ch_1.starting_time_unit # (str) seconds\nstimulus_03_ch_1.gain # (float64) nan\nstimulus_03_ch_1.stimulus_description # (str) N/A\nstimulus_03_ch_1.electrode # (IntracellularElectrode)\nstimulus_03_ch_1.electrode.description # (str) no description\nstimulus_03_ch_1.electrode.device # (Device)\nstimulus_03_ch_1.electrode.device.description # (str) no description\nstimulus_04_ch_0 = stimulus[\"stimulus-04-ch-0\"]\nstimulus_04_ch_0 # (CurrentClampStimulusSeries)\nstimulus_04_ch_0.starting_time # (float64) 3.0\nstimulus_04_ch_0.rate # (float64) 10000.0\nstimulus_04_ch_0.resolution # (float64) -1.0\nstimulus_04_ch_0.comments # (str) no comments\nstimulus_04_ch_0.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_04_ch_0.conversion # (float64) 1e-12\nstimulus_04_ch_0.offset # (float64) 0.0\nstimulus_04_ch_0.unit # (str) amperes\nstimulus_04_ch_0.data # (Dataset) shape (3000,); dtype float64\n# stimulus_04_ch_0.data[:] # Access all data\n# stimulus_04_ch_0.data[0:n] # Access first n elements\nstimulus_04_ch_0.starting_time_unit # (str) seconds\nstimulus_04_ch_0.gain # (float64) nan\nstimulus_04_ch_0.stimulus_description # (str) N/A\nstimulus_04_ch_0.electrode # (IntracellularElectrode)\nstimulus_04_ch_0.electrode.description # (str) no description\nstimulus_04_ch_0.electrode.device # (Device)\nstimulus_04_ch_0.electrode.device.description # (str) no description\nstimulus_04_ch_1 = stimulus[\"stimulus-04-ch-1\"]\nstimulus_04_ch_1 # (CurrentClampStimulusSeries)\nstimulus_04_ch_1.starting_time # (float64) 3.0\nstimulus_04_ch_1.rate # (float64) 10000.0\nstimulus_04_ch_1.resolution # (float64) -1.0\nstimulus_04_ch_1.comments # (str) no comments\nstimulus_04_ch_1.description # (str) Stim type: episodic stimulation, 1s steps, 20pA increments, -120pA to 260pA\nstimulus_04_ch_1.conversion # (float64) 0.001\nstimulus_04_ch_1.offset # (float64) 0.0\nstimulus_04_ch_1.unit # (str) amperes\nstimulus_04_ch_1.data # (Dataset) shape (3000,); dtype float64\n# stimulus_04_ch_1.data[:] # Access all data\n# stimulus_04_ch_1.data[0:n] # Access first n elements\nstimulus_04_ch_1.starting_time_unit # (str) seconds\nstimulus_04_ch_1.gain # (float64) nan\nstimulus_04_ch_1.stimulus_description # (str) N/A\nstimulus_04_ch_1.electrode # (IntracellularElectrode)\nstimulus_04_ch_1.electrode.description # (str) no description\nstimulus_04_ch_1.electrode.device # (Device)\nstimulus_04_ch_1.electrode.device.description # (str) no description\n# ...\n# Other fields: stimulus-05-ch-0, stimulus-05-ch-1, stimulus-06-ch-0, stimulus-06-ch-1, stimulus-07-ch-0, stimulus-07-ch-1, stimulus-08-ch-0, stimulus-08-ch-1, stimulus-09-ch-0, stimulus-09-ch-1, stimulus-10-ch-0, stimulus-10-ch-1, stimulus-11-ch-0, stimulus-11-ch-1, stimulus-12-ch-0\n# ... and 63 more fields\nnwb.devices # (LabelledDict)\ndevices = nwb.devices\nDeviceIcephys = devices[\"DeviceIcephys\"]\nDeviceIcephys # (Device)\nDeviceIcephys.description # (str) no description\nnwb.lab_meta_data # (LabelledDict)\nlab_meta_data = nwb.lab_meta_data\nDandiIcephysMetadata = lab_meta_data[\"DandiIcephysMetadata\"]\nDandiIcephysMetadata # (DandiIcephysMetadata)\nDandiIcephysMetadata.cell_id # (str) C1\nDandiIcephysMetadata.slice_id # (str) slice 1\nDandiIcephysMetadata.targeted_layer # (str) CeA\nDandiIcephysMetadata.inferred_layer # (str) CeA\nnwb.lab # (str) Kay Tye Lab\nnwb.institution # (str) Massachusetts Institute of Technology\nnwb.subject # (Subject)\nnwb.subject.age # (str) P302D\nnwb.subject.age__reference # (str) birth\nnwb.subject.description # (str) AAV5-DIO-ChR2-eYFP into DRN\nnwb.subject.genotype # (str) heterozygote\nnwb.subject.sex # (str) F\nnwb.subject.species # (str) Mus musculus\nnwb.subject.subject_id # (str) 23\nnwb.subject.date_of_birth # (datetime) 2014-05-26T00:00:00-07:00\nnwb.subject.strain # (str) DAT::Cre\nnwb.intracellular_recordings # (IntracellularRecordingsTable)\nnwb.intracellular_recordings.description # (str) A table to group together a stimulus and response from a single electrode and a single simultaneo...\nnwb.intracellular_recordings.colnames # (tuple) []\nnwb.intracellular_recordings.columns # (tuple) []\nnwb.intracellular_recordings.category_tables # (OrderedDict)\nnwb.intracellular_recordings.id # (ElementIdentifiers)\n# nwb.intracellular_recordings.to_dataframe() # (DataFrame) Convert to a pandas DataFrame with 86 rows and 0 columns\n# nwb.intracellular_recordings.to_dataframe().head() # (DataFrame) Show the first few rows of the pandas DataFrame\nnwb.icephys_simultaneous_recordings # (SimultaneousRecordingsTable)\nnwb.icephys_simultaneous_recordings.description # (str) A table for grouping different intracellular recordings from theIntracellularRecordingsTable tabl...\nnwb.icephys_simultaneous_recordings.colnames # (tuple) ['recordings']\nnwb.icephys_simultaneous_recordings.columns # (tuple)\nnwb.icephys_simultaneous_recordings.id # (ElementIdentifiers)\n# nwb.icephys_simultaneous_recordings.to_dataframe() # (DataFrame) Convert to a pandas DataFrame with 43 rows and 2 columns\n# nwb.icephys_simultaneous_recordings.to_dataframe().head() # (DataFrame) Show the first few rows of the pandas DataFrame\nnwb.icephys_simultaneous_recordings.recordings # (VectorIndex) Index for VectorData 'recordings'\n# nwb.icephys_simultaneous_recordings.recordings_index[0] # (DataFrame)\n# nwb.icephys_simultaneous_recordings.recordings_index[1] # (DataFrame)\n# nwb.icephys_simultaneous_recordings.recordings_index[2] # (DataFrame)\n# nwb.icephys_simultaneous_recordings.recordings_index[3] # (DataFrame)\n# ...\nnwb.icephys_sequential_recordings # (SequentialRecordingsTable)\nnwb.icephys_sequential_recordings.description # (str) A table for grouping different intracellular recording simultaneous_recordings from the Simultane...\nnwb.icephys_sequential_recordings.colnames # (tuple) ['simultaneous_recordings', 'stimulus_type']\nnwb.icephys_sequential_recordings.columns # (tuple)\nnwb.icephys_sequential_recordings.id # (ElementIdentifiers)\n# nwb.icephys_sequential_recordings.to_dataframe() # (DataFrame) Convert to a pandas DataFrame with 5 rows and 3 columns\n# nwb.icephys_sequential_recordings.to_dataframe().head() # (DataFrame) Show the first few rows of the pandas DataFrame\nnwb.icephys_sequential_recordings.simultaneous_recordings # (VectorIndex) Index for VectorData 'simultaneous_recordings'\n# nwb.icephys_sequential_recordings.simultaneous_recordings_index[0] # (DataFrame)\n# nwb.icephys_sequential_recordings.simultaneous_recordings_index[1] # (DataFrame)\n# nwb.icephys_sequential_recordings.simultaneous_recordings_index[2] # (DataFrame)\n# nwb.icephys_sequential_recordings.simultaneous_recordings_index[3] # (DataFrame)\n# ...\nnwb.icephys_sequential_recordings.stimulus_type # (VectorData) Column storing the type of stimulus used for the sequential recording"
      }
    ]
  },
  {
    "role": "user",
    "content": "On the basis of the above information, please create a jupytext notebook that introduces dandiset 001195 using the format described below.\n\nThe purpose of the notebook is to help researchers explore the dandiset and get started with a reanalysis.\n\nStart with an appropriate title for the notebook, such as \"Exploring Dandiset 001195: ...\" (that should be a markdown heading).\n\nInform the user that the notebook was generated with the assistance of AI, and that they should be cautious when interpreting the code or results.\n\nProvide an overview of the Dandiset. Include a link to the Dandiset of the form https://dandiarchive.org/dandiset/001195/0.250408.1733.\n\nSummarize what the notebook covers.\n\nList the packages that are required to run the notebook. Assume that these are already installed on the user's system. Do not include any pip install commands in the notebook.\n\nShow how to use the DANDI API to load assets.\n\nShow how to load and visualize data from the dandiset based on the above information. Feel free to organize things differently from how they are in the above information, but do not make up new information.\n\nGenerate good quality plots (without being redundant).\n\nLoad NWB data by streaming the remote file (as done in the above information) rather than downloading it.\n\nDo not use any functionality of pynwb or dandi that is not covered in the above information.\n\nYou should stick to material that is covered in the above information and do not hallucinate.\n\nThroughout the notebook, include explanatory markdown cells that guide the user through the process.\n\nThe notebook should be well-documented, and follow best practices Include comments in code cells to explain what each step does.\n\nThe Jupytext should use `# %% [markdown]` for markdown cells and `# %%` delimiters for the code cells.\n\nIf any NWB have units objects, you should know the following:\nunits.spike_times_index[i] provides the vector of spike times for the i^th unit. It is actually not an index. Do not use units.spike_times.\n\nDo not render or display the nwb object directly in the notebook as the output could be very large.\n\nUse concise scientific language.\n\nYour notebook will be evaluated based on the following criteria:\n1. How well did the notebook help you understand the purpose and content of the Dandiset?\n2. After reviewing the notebook, do you feel confident in how to access the different types of data from this Dandiset?\n3. Did the notebook help you understand the structure of the NWB file(s) and how to work with them?\n4. Did the visualizations in the notebook generally help you understand key aspects of the data?\n5. Did any of the visualizations make it harder to understand the data (e.g., due to poor formatting, unclear axes, or misleading displays)?\n6. Do you feel more confident creating your own visualizations of the data after seeing the examples in the notebook?\n7. How well did the visualizations show the structure or complexity of the data?\n8. Were there any interpretations or conclusions in the notebook that felt unclear or not well supported by the data shown?\n9. Did any of the plots or examples feel unnecessarily repetitive or redundant?\n10. Did the notebook help you understand what kinds of questions or analyses you could do next with this Dandiset?\n11. How clear and easy was the notebook to follow?\n12. Did the notebook provide code you could easily reuse or adapt to explore the Dandiset yourself?\n13. Did the notebook help you understand what kinds of questions or analyses you could do next with this Dandiset?\n14. Overall, how helpful was this notebook for getting started with this Dandiset?\n\nYour output should be in the format:\n\n<notebook>\nThe text of the jupytext notebook should appear here.\n</notebook>\n\nNo other text should be included in the response.\n"
  },
  {
    "role": "assistant",
    "content": "<notebook>\n# %% [markdown]\n# # Exploring Dandiset 001195: Dorsal Raphe Dopamine Projections in Loneliness-like State\n\n# %% [markdown]\n# > **Note**: This notebook was generated with AI assistance. Please verify all code and results independently.\n\n# %% [markdown]\n# ## Overview\n# This notebook explores Dandiset 001195 ([link](https://dandiarchive.org/dandiset/001195/0.250408.1733)), which contains intracellular electrophysiology recordings investigating how dorsal raphe nucleus (DRN) dopamine neurons mediate different aspects of loneliness-like states through projections to specific brain regions.\n\n# %% [markdown]\n# The notebook demonstrates:\n# 1. How to access the data using the DANDI API\n# 2. Loading and exploring NWB file structure\n# 3. Visualizing current clamp recordings and stimuli\n# 4. Analyzing cellular responses to different stimulus protocols\n\n# %% [markdown]\n# ## Required Packages\n\n# %%\nimport pynwb\nimport h5py\nimport remfile\nfrom dandi.dandiapi import DandiAPIClient\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# %% [markdown]\n# ## Loading Data from DANDI\n\n# %%\n# Initialize DANDI API client\nclient = DandiAPIClient()\ndandiset = client.get_dandiset(\"001195\", \"0.250408.1733\")\n\n# Get example file URL\nexample_path = \"sub-23/sub-23_ses-20150324T134114_slice-slice-1_cell-C1_icephys.nwb\"\nurl = next(dandiset.get_assets_by_glob(example_path)).download_url\n\n# Load NWB file using streaming\nremote_file = remfile.File(url)\nh5_file = h5py.File(remote_file)\nio = pynwb.NWBHDF5IO(file=h5_file)\nnwb = io.read()\n\n# %% [markdown]\n# ## Exploring Recording Metadata\n\n# %%\n# Print key metadata about the recording\nprint(f\"Lab: {nwb.lab}\")\nprint(f\"Institution: {nwb.institution}\")\nprint(f\"Session Description: {nwb.session_description}\")\nprint(\"\\nSubject Information:\")\nprint(f\"Species: {nwb.subject.species}\")\nprint(f\"Age: {nwb.subject.age}\")\nprint(f\"Sex: {nwb.subject.sex}\")\nprint(f\"Strain: {nwb.subject.strain}\")\nprint(f\"Description: {nwb.subject.description}\")\n\n# %% [markdown]\n# ## Analyzing Current Clamp Recordings\n# Let's examine the response to current injection protocols. The data contains paired stimulus and response recordings.\n\n# %%\ndef plot_stim_response(stim_series, response_series, sweep_num=1):\n    \"\"\"\n    Plot stimulus and corresponding response for a given sweep.\n    \n    Args:\n        stim_series: Stimulus time series\n        response_series: Response time series\n        sweep_num: Sweep number to display\n    \"\"\"\n    time = np.arange(len(stim_series.data)) / stim_series.rate\n    \n    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10, 6), sharex=True)\n    \n    # Plot stimulus\n    ax1.plot(time, stim_series.data * 1e12)  # Convert to pA\n    ax1.set_ylabel('Current (pA)')\n    ax1.set_title(f'Sweep {sweep_num} - Stimulus')\n    \n    # Plot response\n    ax2.plot(time, response_series.data * response_series.conversion * 1000)  # Convert to mV\n    ax2.set_xlabel('Time (s)')\n    ax2.set_ylabel('Voltage (mV)')\n    ax2.set_title('Response')\n    \n    plt.tight_layout()\n    return fig\n\n# %%\n# Plot example sweep\nstim = nwb.stimulus['stimulus-01-ch-0']\nresponse = nwb.acquisition['current_clamp-response-01-ch-0']\n\nplot_stim_response(stim, response, sweep_num=1)\n\n# %% [markdown]\n# ## Analyzing Response Properties Across Sweeps\n\n# %%\ndef extract_steady_state_response(response_series, stim_start_idx=10000, stim_duration_idx=5000):\n    \"\"\"\n    Extract steady-state response during stimulus period.\n    \n    Args:\n        response_series: Response time series\n        stim_start_idx: Index where stimulus starts\n        stim_duration_idx: Duration of stimulus in samples\n    \n    Returns:\n        float: Mean steady-state response\n    \"\"\"\n    steady_state = response_series.data[stim_start_idx:stim_start_idx+stim_duration_idx]\n    return np.mean(steady_state) * response_series.conversion * 1000  # Convert to mV\n\n# %%\n# Analyze first 10 sweeps\nn_sweeps = 10\nsteady_state_responses = []\n\nfor i in range(1, n_sweeps+1):\n    response = nwb.acquisition[f'current_clamp-response-{i:02d}-ch-0']\n    steady_state = extract_steady_state_response(response)\n    steady_state_responses.append(steady_state)\n\n# Plot steady-state responses\nplt.figure(figsize=(8, 6))\nplt.plot(range(1, n_sweeps+1), steady_state_responses, 'o-')\nplt.xlabel('Sweep Number')\nplt.ylabel('Steady-state Response (mV)')\nplt.title('Response Amplitude Across Sweeps')\nplt.grid(True)\nplt.show()\n\n# %% [markdown]\n# ## Next Steps\n# This notebook demonstrated basic access and visualization of intracellular recordings from the Dandiset. Possible next analyses could include:\n# - Characterizing membrane properties\n# - Analyzing spike dynamics\n# - Comparing responses across different cells and experimental conditions\n# - Investigating relationships between stimulus parameters and cellular responses\n</notebook>"
  },
  {
    "role": "user",
    "content": "The notebook execution failed with the following error:\n\nNotebook execution failed: [NbClientApp] Executing notebooks/dandisets/001195/0.250408.1733/skip-explore/claude-3.5-sonnet/h-3/notebook.ipynb\n[NbClientApp] Executing notebook with kernel: \nTraceback (most recent call last):\n  File \"/opt/conda/bin/jupyter-execute\", line 10, in <module>\n    sys.exit(main())\n             ^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/jupyter_core/application.py\", line 283, in launch_instance\n    super().launch_instance(argv=argv, **kwargs)\n  File \"/opt/conda/lib/python3.11/site-packages/traitlets/config/application.py\", line 1074, in launch_instance\n    app.initialize(argv)\n  File \"/opt/conda/lib/python3.11/site-packages/traitlets/config/application.py\", line 118, in inner\n    return method(app, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbclient/cli.py\", line 161, in initialize\n    self.run_notebook(path)\n  File \"/opt/conda/lib/python3.11/site-packages/nbclient/cli.py\", line 215, in run_notebook\n    client.execute()\n  File \"/opt/conda/lib/python3.11/site-packages/jupyter_core/utils/__init__.py\", line 165, in wrapped\n    return loop.run_until_complete(inner)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/asyncio/base_events.py\", line 654, in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbclient/client.py\", line 709, in async_execute\n    await self.async_execute_cell(\n  File \"/opt/conda/lib/python3.11/site-packages/nbclient/client.py\", line 1062, in async_execute_cell\n    await self._check_raise_for_error(cell, cell_index, exec_reply)\n  File \"/opt/conda/lib/python3.11/site-packages/nbclient/client.py\", line 918, in _check_raise_for_error\n    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)\nnbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:\n------------------\n# Plot example sweep\nstim = nwb.stimulus['stimulus-01-ch-0']\nresponse = nwb.acquisition['current_clamp-response-01-ch-0']\n\nplot_stim_response(stim, response, sweep_num=1)\n------------------\n\n\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[0;32mIn[5], line 5\u001b[0m\n\u001b[1;32m      2\u001b[0m stim \u001b[38;5;241m=\u001b[39m nwb\u001b[38;5;241m.\u001b[39mstimulus[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstimulus-01-ch-0\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[1;32m      3\u001b[0m response \u001b[38;5;241m=\u001b[39m nwb\u001b[38;5;241m.\u001b[39macquisition[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mcurrent_clamp-response-01-ch-0\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[0;32m----> 5\u001b[0m \u001b[43mplot_stim_response\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstim\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mresponse\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msweep_num\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m)\u001b[49m\n\nCell \u001b[0;32mIn[4], line 15\u001b[0m, in \u001b[0;36mplot_stim_response\u001b[0;34m(stim_series, response_series, sweep_num)\u001b[0m\n\u001b[1;32m     12\u001b[0m fig, (ax1, ax2) \u001b[38;5;241m=\u001b[39m plt\u001b[38;5;241m.\u001b[39msubplots(\u001b[38;5;241m2\u001b[39m, \u001b[38;5;241m1\u001b[39m, figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m10\u001b[39m, \u001b[38;5;241m6\u001b[39m), sharex\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[1;32m     14\u001b[0m \u001b[38;5;66;03m# Plot stimulus\u001b[39;00m\n\u001b[0;32m---> 15\u001b[0m ax1\u001b[38;5;241m.\u001b[39mplot(time, \u001b[43mstim_series\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdata\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m1e12\u001b[39;49m)  \u001b[38;5;66;03m# Convert to pA\u001b[39;00m\n\u001b[1;32m     16\u001b[0m ax1\u001b[38;5;241m.\u001b[39mset_ylabel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mCurrent (pA)\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m     17\u001b[0m ax1\u001b[38;5;241m.\u001b[39mset_title(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mSweep \u001b[39m\u001b[38;5;132;01m{\u001b[39;00msweep_num\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m - Stimulus\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\n\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for *: 'Dataset' and 'float'\n\n\n\nPlease provide a corrected version of the notebook."
  },
  {
    "role": "assistant",
    "content": "<notebook>\n# %% [markdown]\n# # Exploring Dandiset 001195: Dorsal Raphe Dopamine Projections in Loneliness-like State\n\n# %% [markdown]\n# > **Note**: This notebook was generated with AI assistance. Please verify all code and results independently.\n\n# %% [markdown]\n# ## Overview\n# This notebook explores Dandiset 001195 ([link](https://dandiarchive.org/dandiset/001195/0.250408.1733)), which contains intracellular electrophysiology recordings investigating how dorsal raphe nucleus (DRN) dopamine neurons mediate different aspects of loneliness-like states through projections to specific brain regions.\n\n# %% [markdown]\n# The notebook demonstrates:\n# 1. How to access the data using the DANDI API\n# 2. Loading and exploring NWB file structure\n# 3. Visualizing current clamp recordings and stimuli\n# 4. Analyzing cellular responses to different stimulus protocols\n\n# %% [markdown]\n# ## Required Packages\n\n# %%\nimport pynwb\nimport h5py\nimport remfile\nfrom dandi.dandiapi import DandiAPIClient\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# %% [markdown]\n# ## Loading Data from DANDI\n\n# %%\n# Initialize DANDI API client\nclient = DandiAPIClient()\ndandiset = client.get_dandiset(\"001195\", \"0.250408.1733\")\n\n# Get example file URL\nexample_path = \"sub-23/sub-23_ses-20150324T134114_slice-slice-1_cell-C1_icephys.nwb\"\nurl = next(dandiset.get_assets_by_glob(example_path)).download_url\n\n# Load NWB file using streaming\nremote_file = remfile.File(url)\nh5_file = h5py.File(remote_file)\nio = pynwb.NWBHDF5IO(file=h5_file)\nnwb = io.read()\n\n# %% [markdown]\n# ## Exploring Recording Metadata\n\n# %%\n# Print key metadata about the recording\nprint(f\"Lab: {nwb.lab}\")\nprint(f\"Institution: {nwb.institution}\")\nprint(f\"Session Description: {nwb.session_description}\")\nprint(\"\\nSubject Information:\")\nprint(f\"Species: {nwb.subject.species}\")\nprint(f\"Age: {nwb.subject.age}\")\nprint(f\"Sex: {nwb.subject.sex}\")\nprint(f\"Strain: {nwb.subject.strain}\")\nprint(f\"Description: {nwb.subject.description}\")\n\n# %% [markdown]\n# ## Analyzing Current Clamp Recordings\n# Let's examine the response to current injection protocols. The data contains paired stimulus and response recordings.\n\n# %%\ndef plot_stim_response(stim_series, response_series, sweep_num=1):\n    \"\"\"\n    Plot stimulus and corresponding response for a given sweep.\n    \n    Args:\n        stim_series: Stimulus time series\n        response_series: Response time series\n        sweep_num: Sweep number to display\n    \"\"\"\n    time = np.arange(len(stim_series.data[:])) / stim_series.rate\n    \n    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10, 6), sharex=True)\n    \n    # Plot stimulus\n    ax1.plot(time, np.array(stim_series.data[:]) * 1e12)  # Convert to pA\n    ax1.set_ylabel('Current (pA)')\n    ax1.set_title(f'Sweep {sweep_num} - Stimulus')\n    \n    # Plot response\n    ax2.plot(time, np.array(response_series.data[:]) * response_series.conversion * 1000)  # Convert to mV\n    ax2.set_xlabel('Time (s)')\n    ax2.set_ylabel('Voltage (mV)')\n    ax2.set_title('Response')\n    \n    plt.tight_layout()\n    return fig\n\n# %%\n# Plot example sweep\nstim = nwb.stimulus['stimulus-01-ch-0']\nresponse = nwb.acquisition['current_clamp-response-01-ch-0']\n\nplot_stim_response(stim, response, sweep_num=1)\n\n# %% [markdown]\n# ## Analyzing Response Properties Across Sweeps\n\n# %%\ndef extract_steady_state_response(response_series, stim_start_idx=1000, stim_duration_idx=500):\n    \"\"\"\n    Extract steady-state response during stimulus period.\n    \n    Args:\n        response_series: Response time series\n        stim_start_idx: Index where stimulus starts\n        stim_duration_idx: Duration of stimulus in samples\n    \n    Returns:\n        float: Mean steady-state response\n    \"\"\"\n    steady_state = np.array(response_series.data[stim_start_idx:stim_start_idx+stim_duration_idx])\n    return np.mean(steady_state) * response_series.conversion * 1000  # Convert to mV\n\n# %%\n# Analyze first 10 sweeps\nn_sweeps = 10\nsteady_state_responses = []\n\nfor i in range(1, n_sweeps+1):\n    response = nwb.acquisition[f'current_clamp-response-{i:02d}-ch-0']\n    steady_state = extract_steady_state_response(response)\n    steady_state_responses.append(steady_state)\n\n# Plot steady-state responses\nplt.figure(figsize=(8, 6))\nplt.plot(range(1, n_sweeps+1), steady_state_responses, 'o-')\nplt.xlabel('Sweep Number')\nplt.ylabel('Steady-state Response (mV)')\nplt.title('Response Amplitude Across Sweeps')\nplt.grid(True)\nplt.show()\n\n# %% [markdown]\n# ## Next Steps\n# This notebook demonstrated basic access and visualization of intracellular recordings from the Dandiset. Possible next analyses could include:\n# - Characterizing membrane properties\n# - Analyzing spike dynamics\n# - Comparing responses across different cells and experimental conditions\n# - Investigating relationships between stimulus parameters and cellular responses\n</notebook>"
  }
]